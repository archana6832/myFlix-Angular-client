var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.132,1,0.36]],["body/components/AppComponent.html",[0,0.231,1,0.659,2,0.803,3,0.547,4,0.46,5,0.852,6,0.852,7,0.852,8,0.852,9,0.46,10,2.855,11,0.852,12,1.357,13,0.732,14,3.023,15,1.067,16,4.822,17,1.067,18,4.416,19,0.547,20,1.067,21,2.489,22,0.641,23,0.049,24,0.971,25,1.413,26,1.413,27,3.576,28,3.576,29,2.61,30,0.742,31,3.526,32,0.547,33,0.46,34,0.547,35,0.547,36,0.852,37,1.067,38,1.067,39,0.852,40,1.221,41,0.852,42,0.803,43,0.852,44,0.46,45,0.641,46,1.165,47,0.46,48,0.641,49,0.852,50,0.46,51,0.641,52,0.852,53,0.46,54,0.641,55,0.46,56,0.852,57,0.46,58,0.742,59,0.852,60,0.46,61,0.742,62,0.46,63,0.803,64,0.547,65,1.067,66,0.46,67,0.641,68,0.46,69,0.742,70,0.742,71,0.852,72,0.852,73,0.038,74,0.038]],["title/modules/AppModule.html",[75,1.631,76,1.631]],["body/modules/AppModule.html",[0,0.211,1,0.702,2,0.801,3,0.388,4,0.326,9,0.326,13,0.53,14,1.71,23,0.05,29,1.477,32,0.875,33,0.326,34,0.388,35,0.388,44,0.628,45,0.454,47,0.628,48,0.454,50,0.628,51,0.454,53,0.645,54,0.454,55,0.628,57,0.645,58,0.739,60,0.628,61,0.526,62,0.628,63,0.639,64,0.545,66,0.628,67,0.639,68,0.645,69,0.855,73,0.03,74,0.03,75,2.4,76,3.349,77,2.274,78,2.075,79,2.023,80,2.023,81,2.023,82,2.023,83,2.485,84,2.844,85,2.023,86,1.477,87,2.499,88,3.512,89,2.844,90,3.512,91,1.844,92,2.499,93,3.512,94,3.512,95,2.499,96,2.499,97,3.512,98,2.499,99,2.499,100,2.499,101,2.499,102,2.499,103,2.499,104,2.499,105,2.499,106,2.844,107,3.512,108,2.844,109,1.71,110,3.512,111,2.023,112,2.499,113,0.688,114,2.023,115,2.499,116,1.71,117,3.512,118,2.499,119,1.477,120,2.499,121,2.499,122,3.512,123,2.499,124,3.512,125,2.499,126,3.512,127,2.499,128,2.499,129,3.512,130,0.604,131,3.512,132,1.001,133,1.001,134,2.499,135,2.499,136,3.512,137,2.499,138,3.512,139,2.023,140,2.023,141,1.813,142,1.001,143,3.512,144,2.499,145,3.512,146,2.499,147,1.813,148,2.844,149,1.71,150,2.78,151,1.71,152,2.499,153,1.477,154,2.023,155,1.477,156,1.29,157,1.71,158,2.499,159,1.477,160,2.023,161,2.499,162,1.29,163,2.499,164,4.405,165,1.001,166,2.499,167,2.499,168,2.499,169,2.499,170,2.499]],["title/modules/AppRoutingModule.html",[75,1.631,83,1.425]],["body/modules/AppRoutingModule.html",[3,0.653,4,0.549,9,0.549,23,0.049,32,0.763,33,0.549,34,0.653,35,0.653,73,0.042,74,0.042,77,2.172,83,2.537,89,3.407,106,3.98,140,3.98,141,2.688,142,1.686,162,2.172,171,4.207,172,4.207,173,4.207,174,4.207]],["title/components/DirectorCardComponent.html",[0,0.132,44,0.36]],["body/components/DirectorCardComponent.html",[0,0.209,1,0.375,2,0.704,3,0.447,4,0.375,5,1.056,6,0.695,7,0.695,8,0.695,9,0.375,11,0.695,12,1.32,13,0.713,15,0.935,17,0.935,19,0.447,20,0.935,22,0.887,23,0.049,24,1.288,30,0.92,32,0.601,33,0.375,34,0.447,35,0.679,36,0.695,37,0.935,38,0.935,39,0.695,40,1.13,41,0.695,42,0.85,43,0.695,44,0.61,45,0.972,46,1.056,47,0.375,48,0.523,49,0.695,50,0.375,51,0.523,52,0.695,53,0.57,54,0.523,55,0.375,56,0.695,57,0.375,58,0.605,59,0.695,60,0.375,61,0.605,62,0.375,63,0.704,64,0.447,65,0.935,66,0.375,67,0.523,68,0.375,69,0.605,70,0.605,71,0.695,72,0.695,73,0.033,74,0.033,130,0.695,155,2.763,175,3.787,176,1.7,177,0.935,178,1.204,179,2.286,180,2.993,181,2.648,182,1.056,183,2.092,184,0.935,185,1.288,186,1.13,187,1.969,188,2.584,189,2.876,190,2.648,191,1.21,192,2.648,193,1.997,194,2.993,195,2.648,196,1.997,197,2.648,198,1.997,199,2.648,200,1.997,201,2.648,202,0.792,203,0.792,204,2.876,205,0.695,206,1.066,207,1.969,208,2.648,209,2.329,210,1.7,211,3.541,212,3.541,213,3.541,214,3.133,215,3.869,216,3.787,217,3.869,218,3.869,219,1.997]],["title/components/EditProfileComponent.html",[0,0.132,47,0.36]],["body/components/EditProfileComponent.html",[0,0.188,1,0.305,2,0.61,3,0.363,4,0.305,5,0.946,6,0.566,7,0.566,8,0.566,9,0.305,11,0.566,12,1.277,13,0.69,15,0.81,17,0.81,19,0.363,20,0.81,22,0.882,23,0.05,24,1.178,25,1.344,26,1.344,30,1.064,32,0.703,33,0.305,34,0.363,35,0.363,36,0.566,37,0.81,38,0.81,39,0.566,40,1.033,41,0.566,42,0.713,43,0.566,44,0.305,45,0.426,46,0.946,47,0.558,48,0.932,49,0.566,50,0.305,51,0.426,52,0.566,53,0.305,54,0.426,55,0.305,56,0.566,57,0.305,58,0.953,59,0.566,60,0.305,61,0.493,62,0.305,63,0.932,64,0.363,65,0.81,66,0.305,67,0.426,68,0.305,69,0.493,70,0.493,71,0.566,72,0.566,73,0.029,74,0.029,113,0.645,130,0.566,132,0.938,133,0.938,142,0.938,159,3.03,165,1.344,177,0.81,178,1.079,182,1.266,184,0.81,185,1.178,186,0.81,202,0.645,203,0.645,205,0.81,206,1.178,220,4.152,221,1.896,222,3.918,223,3.353,224,3.1,225,2.139,226,3.03,227,2.056,228,3.816,229,2.528,230,2.338,231,1.209,232,1.416,233,3.1,234,2.056,235,3.353,236,2.023,237,2.315,238,2.682,239,2.682,240,2.295,241,2.295,242,2.562,243,2.716,244,2.341,245,1.731,246,1.731,247,1.731,248,3.353,249,2.295,250,4.963,251,1.731,252,3.918,253,1.731,254,2.295,255,2.716,256,2.295,257,2.209,258,1.982,259,2.295,260,2.295,261,1.982,262,1.731,263,2.295,264,1.982,265,3.353,266,1.982,267,2.023,268,2.341,269,2.341,270,2.341,271,2.341,272,2.341,273,1.982,274,2.341,275,1.982,276,1.209,277,1.063,278,1.063,279,2.341,280,1.603,281,1.896,282,1.896,283,2.341,284,2.341,285,2.341,286,2.341,287,1.603,288,1.731,289,3.353,290,1.896,291,1.896,292,1.209]],["title/injectables/FetchApiDataService.html",[232,0.863,293,1.631]],["body/injectables/FetchApiDataService.html",[3,0.214,4,0.18,9,0.18,13,0.18,14,0.943,19,0.214,21,1.455,22,0.787,23,0.05,29,0.814,30,1.02,32,0.503,33,0.18,34,0.214,35,0.438,42,0.827,45,0.513,48,0.406,51,0.648,54,0.809,63,0.761,64,0.214,73,0.019,74,0.019,75,1.321,91,0.626,111,1.116,113,1.509,119,1.321,162,2.53,165,1.823,182,0.922,183,1.823,184,0.54,186,0.681,196,2.619,200,1.154,202,1.192,203,1.192,205,1.272,210,1.321,228,1.81,230,1.455,232,0.699,236,2.47,251,2.653,262,1.154,266,0.814,267,0.711,273,1.916,287,2.22,290,2.283,293,1.321,294,1.378,295,3.355,296,0.943,297,1.81,298,1.53,299,2.626,300,3.091,301,2.235,302,2.44,303,3.565,304,2.626,305,3.565,306,3.243,307,1.53,308,2.235,309,2.235,310,2.283,311,1.378,312,4.188,313,1.378,314,2.235,315,2.283,316,2.235,317,2.235,318,1.81,319,2.235,320,3.817,321,2.235,322,1.378,323,5.196,324,3.557,325,4.208,326,3.044,327,4.447,328,3.091,329,5.267,330,3.969,331,3.969,332,2.235,333,1.378,334,2.613,335,2.613,336,1.53,337,1.378,338,2.235,339,2.819,340,2.235,341,1.378,342,3.243,343,2.235,344,1.378,345,2.235,346,2.235,347,2.613,348,2.235,349,2.235,350,2.474,351,1.378,352,1.81,353,1.378,354,2.235,355,2.235,356,1.378,357,1.378,358,1.378,359,2.235,360,2.235,361,1.378,362,2.235,363,3.243,364,1.378,365,2.235,366,4.188,367,2.235,368,2.626,369,0.626,370,2.235,371,1.81,372,2.235,373,2.235,374,2.235,375,2.235,376,2.235,377,1.378,378,1.53,379,3.243,380,2.235,381,1.378,382,1.81,383,3.317,384,1.378,385,4.549,386,1.378,387,1.378,388,1.378,389,3.355,390,1.378,391,1.378,392,1.378,393,2.235,394,1.116,395,1.116,396,1.116,397,0.943,398,1.116,399,1.116,400,1.378,401,2.864,402,1.378,403,2.106,404,2.235,405,2.819,406,3.817,407,2.235,408,4.638,409,4.447,410,3.817,411,4.447,412,4.447,413,4.447,414,4.447,415,4.447,416,1.378,417,1.378,418,1.378,419,1.378,420,1.378,421,1.378,422,2.235,423,1.378,424,2.819,425,2.235,426,1.378,427,1.378,428,1.378,429,1.378,430,1.378,431,1.378,432,1.116,433,1.378,434,1.378,435,1.378,436,1.378,437,1.378,438,1.378]],["title/components/GenreDialogComponent.html",[0,0.132,50,0.36]],["body/components/GenreDialogComponent.html",[0,0.214,1,0.39,2,0.722,3,0.464,4,0.39,5,1.077,6,0.722,7,0.722,8,0.722,9,0.39,11,0.722,12,1.327,13,0.717,15,0.959,17,0.959,19,0.464,20,0.959,22,0.899,23,0.049,24,1.094,30,0.938,32,0.616,33,0.39,34,0.464,35,0.692,36,0.722,37,0.959,38,0.959,39,0.722,40,1.147,41,0.722,42,0.864,43,0.722,44,0.39,45,0.544,46,1.077,47,0.39,48,0.544,49,0.722,50,0.619,51,0.958,52,0.722,53,0.581,54,0.544,55,0.39,56,0.722,57,0.39,58,0.629,59,0.722,60,0.39,61,0.629,62,0.39,63,0.722,64,0.464,65,0.959,66,0.39,67,0.544,68,0.39,69,0.629,70,0.629,71,0.722,72,0.722,73,0.034,74,0.034,130,0.722,153,2.807,177,0.959,178,1.228,182,1.077,183,2.11,184,0.959,185,1.308,186,1.147,187,2.047,188,2.634,190,2.718,191,1.242,192,2.718,193,2.05,194,3.052,195,2.718,196,2.05,197,2.718,198,2.05,199,2.718,200,2.05,201,2.718,202,0.824,203,0.824,205,0.722,206,1.094,207,2.047,208,2.718,210,1.767,214,3.216,219,2.05,369,2.024,439,3.846,440,2.422,441,4.458,442,3.971,443,2.99,444,3.971,445,2.99,446,2.99,447,3.216]],["title/components/MovieCardComponent.html",[0,0.132,53,0.36]],["body/components/MovieCardComponent.html",[0,0.212,1,0.191,2,0.427,3,0.227,4,0.191,5,0.354,6,0.354,7,0.354,8,0.354,9,0.191,11,0.354,12,1.157,13,0.625,15,0.567,17,0.567,19,0.227,20,0.567,21,2.588,22,0.883,23,0.05,24,1.51,25,1.178,26,1.178,30,1.055,32,0.64,33,0.191,34,0.227,35,0.227,36,0.354,37,0.567,38,0.567,39,0.354,40,0.812,41,0.354,42,0.944,43,0.354,44,0.306,45,0.903,46,0.71,47,0.191,48,0.266,49,0.354,50,0.306,51,0.858,52,0.354,53,0.438,54,0.979,55,0.191,56,0.354,57,0.191,58,0.308,59,0.354,60,0.306,61,0.954,62,0.191,63,0.75,64,0.227,65,0.567,66,0.191,67,0.266,68,0.191,69,0.308,70,0.308,71,0.354,72,0.354,73,0.02,74,0.02,113,0.404,119,1.388,130,0.354,132,0.587,133,0.587,149,3.461,150,1.608,153,0.866,154,1.187,155,0.866,156,0.756,162,0.756,165,1.856,176,0.866,177,0.567,178,0.809,179,1.388,180,2.011,181,1.608,182,1.068,183,1.969,184,0.567,185,0.926,186,0.567,191,1.448,198,1.212,202,1.18,203,1.18,205,1.095,206,1.393,211,3.178,212,3.47,213,3.47,216,2.722,225,2.141,227,1.67,231,0.756,232,1.15,234,1.67,245,2.212,246,2.212,247,2.212,251,2.281,253,1.735,257,2.212,258,1.986,259,2.301,261,1.986,262,1.735,263,2.301,264,0.866,266,1.986,267,1.735,273,0.866,276,1.899,277,0.665,278,0.665,288,1.212,292,1.212,297,1.902,298,1.608,302,1.608,304,2.722,307,1.608,326,2.822,328,3.178,334,1.608,335,2.301,336,2.011,347,2.301,350,2.319,352,3.178,369,2.296,389,2.301,401,2.787,403,1.388,448,4.095,449,2.939,450,3.678,451,2.348,452,2.722,453,2.348,454,2.348,455,2.348,456,1.902,457,2.348,458,2.348,459,2.348,460,2.348,461,1.465,462,3.925,463,2.939,464,4.42,465,1.465,466,2.722,467,2.348,468,2.348,469,1.465,470,2.348,471,1.465,472,2.348,473,1.465,474,2.348,475,1.465,476,2.687,477,3.229,478,3.178,479,3.925,480,3.361,481,2.348,482,2.348,483,1.465,484,1.902,485,2.518,486,1.465,487,2.348,488,2.348,489,1.465,490,2.348,491,1.465,492,2.348,493,2.348,494,1.465,495,1.465,496,1.465,497,1.465,498,1.608,499,2.348,500,1.465,501,1.187,502,1.187,503,1.902,504,1.187,505,1.465,506,1.465,507,2.011,508,2.38,509,1.465,510,1.187,511,1.187,512,1.465,513,1.187,514,1.465,515,1.187,516,1.465,517,1.465,518,2.348,519,1.608,520,2.348,521,2.348,522,1.465,523,1.465,524,1.465,525,1.465,526,1.465,527,1.465,528,1.465,529,2.722,530,1.465,531,1.902,532,1.902,533,2.348]],["title/components/NavbarComponent.html",[0,0.132,55,0.36]],["body/components/NavbarComponent.html",[0,0.21,1,0.377,2,0.705,3,0.448,4,0.377,5,0.697,6,0.697,7,0.697,8,0.697,9,0.377,11,0.697,12,1.321,13,0.713,15,0.937,17,0.937,19,0.448,20,0.697,23,0.05,30,0.986,32,0.758,33,0.377,34,0.448,35,0.448,36,0.697,37,0.937,38,0.937,39,0.697,40,1.131,41,0.697,42,0.705,43,0.697,44,0.377,45,0.525,46,1.058,47,0.377,48,0.525,49,0.697,50,0.377,51,0.525,52,0.697,53,0.377,54,0.525,55,0.611,56,0.697,57,0.377,58,1.028,59,0.697,60,0.377,61,0.608,62,0.377,63,0.95,64,0.448,65,0.937,66,0.377,67,0.525,68,0.377,69,0.922,70,1.082,71,0.697,72,0.697,73,0.033,74,0.033,86,2.292,113,0.795,130,0.697,132,1.157,133,1.157,141,2.597,142,1.157,165,1.877,177,0.937,178,1.207,182,1.131,184,0.937,185,1.29,186,0.937,191,0.903,205,1.131,206,1.439,225,1.311,226,2.589,227,1.311,232,1.213,234,1.761,276,2.002,277,1.311,278,1.311,281,2.338,534,2.338,535,3.879,536,4.381,537,3.879,538,4.683,539,4.683,540,5.031,541,2.887,542,2.887,543,2.887,544,3.879,545,3.879,546,3.879,547,3.879,548,2.887,549,2.887,550,2.887,551,2.887,552,2.338,553,2.887,554,2.338,555,2.887]],["title/components/ProfileViewComponent.html",[0,0.132,57,0.36]],["body/components/ProfileViewComponent.html",[0,0.201,1,0.2,2,0.443,3,0.238,4,0.2,5,0.732,6,0.371,7,0.371,8,0.371,9,0.2,11,0.371,12,1.17,13,0.632,15,0.588,17,0.588,19,0.238,20,0.588,21,1.781,22,0.881,23,0.05,24,1.335,25,1.605,26,1.605,30,1.088,32,0.652,33,0.2,34,0.238,35,0.238,36,0.371,37,0.588,38,0.588,39,0.371,40,0.833,41,0.371,42,0.684,43,0.371,44,0.2,45,0.279,46,0.732,47,0.318,48,0.728,49,0.371,50,0.2,51,0.279,52,0.371,53,0.2,54,0.443,55,0.2,56,0.371,57,0.45,58,1.081,59,0.371,60,0.318,61,0.726,62,0.2,63,0.92,64,0.238,65,0.588,66,0.2,67,0.279,68,0.2,69,0.726,70,0.726,71,0.371,72,0.371,73,0.021,74,0.021,91,1.375,113,0.834,130,0.371,132,0.615,133,0.615,142,0.615,150,1.05,156,0.792,157,3.561,159,0.906,160,1.242,162,1.564,165,2.009,177,0.588,178,0.834,179,2.038,182,1.153,183,1.508,184,0.588,185,0.95,186,0.588,191,1.313,202,0.834,203,0.834,205,1.153,206,1.405,225,1.977,226,2.717,227,1.708,229,1.439,230,1.564,231,0.792,232,1.176,234,1.708,236,1.942,237,2.717,238,2.575,239,2.575,242,1.257,243,1.972,245,1.781,246,2.067,247,1.781,251,1.942,253,1.564,256,1.667,257,1.257,273,2.223,275,1.439,276,1.942,277,0.696,278,0.696,287,1.667,288,1.257,292,1.257,298,1.05,299,1.972,302,1.05,307,2.981,324,1.667,325,1.972,326,1.667,330,1.972,331,1.972,334,1.667,335,1.667,336,1.667,347,1.667,350,1.439,369,1.708,389,2.361,401,0.906,403,2.038,452,2.793,456,1.972,466,1.972,476,1.667,484,1.972,485,2.575,501,1.242,502,1.242,503,1.972,504,1.972,507,2.575,508,1.972,510,1.242,511,1.972,513,1.242,515,1.242,529,1.972,531,1.972,532,1.972,554,1.242,556,4.212,557,1.242,558,3.029,559,2.436,560,4.774,561,3.762,562,3.449,563,4.005,564,3.449,565,3.449,566,2.436,567,2.436,568,1.534,569,2.436,570,3.029,571,1.972,572,1.972,573,2.436,574,2.436,575,2.436,576,2.073,577,1.534,578,3.449,579,3.029,580,2.436,581,2.436,582,2.436,583,2.436,584,1.534,585,1.534,586,1.534,587,1.534,588,1.667,589,2.436,590,2.436,591,2.436,592,1.534,593,1.972,594,1.972,595,1.534,596,2.436,597,1.534,598,1.439,599,2.436,600,1.534,601,1.534,602,1.534,603,1.534,604,1.534,605,2.436,606,1.534,607,1.534,608,1.534,609,1.534,610,1.242,611,1.534,612,1.534,613,2.436,614,1.534,615,1.534,616,1.534,617,1.534,618,1.534,619,1.534,620,1.534,621,1.534,622,1.534,623,1.534,624,1.534,625,1.534,626,1.534,627,1.534,628,1.534,629,1.534,630,1.534,631,1.534,632,1.534,633,2.436,634,2.436,635,1.534,636,1.534,637,1.534,638,1.534,639,2.436,640,2.436,641,2.436,642,2.436,643,2.436,644,2.436,645,2.436,646,2.436,647,3.449,648,1.534,649,1.534,650,1.242,651,1.534,652,1.242,653,1.242,654,1.242,655,2.436,656,2.436,657,1.534,658,3.029,659,2.436,660,1.534,661,1.534,662,3.029,663,1.534,664,1.534,665,1.534,666,1.534,667,1.534,668,1.534,669,1.534,670,1.534,671,1.534]],["title/components/SynopsisCardComponent.html",[0,0.132,60,0.36]],["body/components/SynopsisCardComponent.html",[0,0.212,1,0.386,2,0.717,3,0.459,4,0.386,5,1.071,6,0.715,7,0.715,8,0.715,9,0.386,11,0.715,12,1.326,13,0.716,15,0.952,17,0.952,19,0.459,20,0.952,21,1.528,22,0.896,23,0.049,24,1.221,30,0.934,32,0.612,33,0.386,34,0.459,35,0.688,36,0.715,37,0.952,38,0.952,39,0.715,40,1.142,41,0.715,42,0.806,43,0.715,44,0.386,45,0.538,46,1.071,47,0.386,48,0.538,49,0.715,50,0.386,51,0.717,52,0.715,53,0.578,54,0.538,55,0.386,56,0.715,57,0.386,58,0.623,59,0.715,60,0.617,61,1.131,62,0.386,63,0.717,64,0.459,65,0.952,66,0.386,67,0.538,68,0.386,69,0.623,70,0.623,71,0.715,72,0.715,73,0.034,74,0.034,130,0.715,156,2.442,176,1.749,177,0.952,178,1.221,179,2.33,180,3.036,181,2.699,182,1.071,183,2.105,184,0.952,185,1.303,186,1.142,187,2.026,188,2.621,190,2.699,191,1.233,192,2.699,193,2.036,194,3.036,195,2.699,196,2.036,197,2.699,198,2.036,199,2.699,200,2.036,201,2.699,202,0.815,203,0.815,205,0.715,206,1.086,207,2.026,208,2.699,209,2.396,210,1.749,219,2.036,369,1.343,447,3.193,485,2.026,672,3.83,673,2.959,674,2.959,675,3.943]],["title/components/UserLoginFormComponent.html",[0,0.132,62,0.36]],["body/components/UserLoginFormComponent.html",[0,0.181,1,0.285,2,0.581,3,0.34,4,0.285,5,0.911,6,0.528,7,0.528,8,0.528,9,0.285,11,0.528,12,1.262,13,0.681,15,0.771,17,0.771,19,0.34,20,0.771,22,0.802,23,0.05,24,0.879,25,0.877,26,0.877,30,1.001,32,0.756,33,0.285,34,0.34,35,0.34,36,0.528,37,0.771,38,0.771,39,0.911,40,1.001,41,0.528,42,0.686,43,0.528,44,0.285,45,0.398,46,0.911,47,0.285,48,0.398,49,0.528,50,0.285,51,0.398,52,0.528,53,0.285,54,0.398,55,0.285,56,0.528,57,0.285,58,0.873,59,0.528,60,0.285,61,0.46,62,0.541,63,0.986,64,0.871,65,0.771,66,0.285,67,0.398,68,0.285,69,0.46,70,0.46,71,0.528,72,0.528,73,0.027,74,0.027,91,1.712,113,0.879,116,1.497,130,0.528,132,0.877,133,0.877,142,0.877,147,2.515,165,1.511,177,0.771,178,1.038,182,1.2,184,0.771,185,1.142,186,0.771,191,0.684,193,1.946,196,1.129,202,0.602,203,0.602,205,0.911,206,1.142,219,1.648,224,3.018,225,2.09,226,2.809,227,2.001,229,2.605,230,2.376,231,1.129,232,1.378,233,3.018,234,2.001,236,2.376,237,2.72,240,2.185,241,2.185,242,2.641,245,1.648,246,1.648,247,1.648,249,2.185,251,1.946,253,2.14,254,2.185,255,2.585,256,1.497,257,2.14,258,1.887,259,2.185,260,2.838,261,1.887,262,1.648,263,2.185,264,1.887,267,1.129,275,1.887,277,1.449,278,0.993,280,1.497,282,1.771,288,1.648,292,1.129,300,1.771,368,1.771,371,1.771,378,3.151,403,1.293,477,1.497,519,2.185,552,1.771,571,1.771,572,1.771,576,1.497,588,1.497,598,1.293,676,3.335,677,1.497,678,3.053,679,2.585,680,4.603,681,3.193,682,2.585,683,2.585,684,2.187,685,2.187,686,3.193,687,3.193,688,2.187,689,2.187,690,2.187,691,1.771,692,1.771,693,1.771,694,1.771,695,2.187,696,2.187,697,2.187,698,2.187,699,1.771,700,1.771,701,3.193,702,1.771,703,2.187,704,2.187,705,2.187,706,2.187,707,2.585,708,2.187,709,2.187,710,2.187,711,2.187,712,2.187,713,2.187,714,2.187,715,1.771,716,2.187,717,1.771,718,2.187,719,2.187,720,2.187]],["title/components/UserRegistrationFormComponent.html",[0,0.132,66,0.36]],["body/components/UserRegistrationFormComponent.html",[0,0.222,1,0.292,2,0.59,3,0.347,4,0.292,5,0.923,6,0.54,7,0.54,8,0.54,9,0.292,11,0.54,12,1.267,13,0.684,15,0.784,17,0.784,19,0.347,20,1.012,22,0.809,23,0.05,24,1.154,25,0.896,26,0.896,30,1.007,32,0.743,33,0.292,34,0.347,35,0.593,36,0.54,37,0.784,38,0.784,39,0.923,40,1.012,41,0.54,42,0.694,43,0.54,44,0.292,45,0.407,46,0.923,47,0.292,48,0.407,49,0.54,50,0.292,51,0.407,52,0.54,53,0.292,54,0.407,55,0.292,56,0.54,57,0.292,58,0.471,59,0.54,60,0.292,61,0.471,62,0.292,63,0.993,64,0.504,65,0.784,66,0.546,67,1.019,68,0.292,69,0.471,70,0.471,71,0.54,72,0.54,73,0.028,74,0.028,91,1.016,113,0.894,116,1.531,130,0.54,132,0.896,133,0.896,147,2.531,177,0.784,178,1.052,182,1.207,184,0.784,185,1.154,186,1.012,191,1.015,193,1.675,202,1.052,203,0.616,205,0.784,206,1.154,219,1.675,224,3.045,225,2.106,227,2.02,229,2.476,230,2.471,231,1.155,232,1.391,233,3.045,234,2.02,236,2.296,237,2.257,238,2.614,239,2.614,240,2.221,241,2.221,242,2.62,245,1.675,246,1.675,247,1.675,249,2.221,253,1.971,254,2.221,257,2.163,258,1.918,260,2.221,261,1.918,262,1.675,266,1.918,267,1.971,275,1.918,277,1.016,278,1.016,280,1.531,288,1.675,291,1.812,292,1.155,310,2.628,378,2.221,382,2.628,477,1.531,478,2.628,519,2.221,576,1.531,588,1.531,598,1.322,676,3.356,677,1.531,678,3.093,679,2.628,682,2.628,683,2.628,691,1.812,692,1.812,693,1.812,694,1.812,699,1.812,700,1.812,715,1.812,717,1.812,721,4.189,722,3.245,723,3.245,724,2.628,725,3.245,726,3.245,727,2.237,728,2.237,729,3.245,730,3.245,731,3.245,732,2.237,733,2.237,734,2.237,735,2.237,736,1.812,737,2.237,738,2.237,739,2.237,740,2.237,741,2.237,742,3.393,743,3.393]],["title/components/WelcomePageComponent.html",[0,0.132,68,0.36]],["body/components/WelcomePageComponent.html",[0,0.249,1,0.345,2,0.862,3,0.411,4,0.345,5,0.64,6,0.64,7,0.64,8,0.64,9,0.345,11,0.64,12,1.304,13,0.704,15,0.883,17,0.883,19,0.411,20,0.883,22,0.665,23,0.049,27,2.961,30,0.998,32,0.701,33,0.345,34,0.411,35,0.761,36,0.64,37,0.883,38,0.883,39,0.64,40,1.091,41,0.64,42,0.762,43,0.64,44,0.345,45,0.481,46,1.012,47,0.345,48,0.481,49,0.64,50,0.345,51,0.481,52,0.64,53,0.345,54,0.481,55,0.345,56,0.64,57,0.345,58,0.557,59,0.64,60,0.345,61,0.557,62,0.477,63,0.931,64,0.807,65,0.883,66,0.477,67,0.914,68,0.589,69,1.107,70,0.951,71,0.64,72,0.64,73,0.031,74,0.031,91,1.902,130,0.64,147,1.888,148,2.961,151,3.356,177,0.883,178,1.154,182,0.883,184,0.883,185,1.244,186,0.64,191,1.661,198,1.888,202,0.729,203,0.729,205,1.012,206,1.35,242,2.643,276,2.594,369,1.202,401,1.565,476,3.092,507,3.092,593,3.658,594,3.658,650,2.144,652,2.144,653,2.144,654,2.144,724,2.961,742,2.961,743,2.961,744,3.97,745,2.144,746,4.189,747,3.657,748,4.518,749,4.518,750,2.648,751,2.648,752,4.189,753,4.189,754,4.189,755,2.648,756,2.648,757,2.648,758,2.648,759,2.648,760,2.648,761,3.657,762,3.657,763,2.648,764,2.648,765,2.648,766,2.648]],["title/coverage.html",[767,3.047]],["body/coverage.html",[0,0.267,1,0.46,9,0.46,10,2.86,22,0.642,23,0.049,44,0.46,47,0.46,50,0.46,53,0.46,55,0.46,57,0.46,60,0.46,62,0.46,64,0.686,66,0.46,67,0.804,68,0.46,73,0.038,74,0.038,113,1.218,147,2.282,149,2.417,151,2.417,153,2.087,155,2.087,156,1.823,157,2.417,159,2.087,175,2.86,176,2.852,220,2.86,221,2.86,232,1.104,293,2.087,295,3.026,296,3.026,383,2.417,397,2.417,439,2.86,440,2.86,448,2.86,534,2.86,556,2.86,557,2.86,672,2.86,676,3.026,677,3.026,744,2.86,745,2.86,767,2.86,768,3.531,769,3.531,770,3.531,771,4.217,772,3.531,773,5.057,774,4.826,775,3.531,776,3.531,777,3.531,778,3.531,779,5.207,780,3.531,781,3.531,782,3.531,783,3.531,784,3.531,785,3.531,786,3.531,787,3.531,788,3.531,789,3.531,790,3.531,791,3.531,792,3.531,793,2.86,794,3.58,795,5.057,796,2.86,797,3.58,798,2.86,799,2.86,800,3.531,801,3.531]],["title/dependencies.html",[78,1.961,802,1.869]],["body/dependencies.html",[23,0.049,33,0.54,73,0.042,74,0.042,78,2.445,108,3.941,109,3.332,139,3.351,142,1.658,394,3.351,803,4.138,804,5.608,805,4.138,806,4.867,807,4.138,808,4.138,809,4.138,810,4.138,811,4.138,812,4.138,813,4.138,814,4.138,815,4.138]],["title/index.html",[19,0.358,816,2.308,817,2.308]],["body/index.html",[0,0.237,4,0.487,13,0.487,23,0.039,28,4.007,42,0.679,70,0.786,73,0.039,74,0.039,86,2.207,114,3.706,119,2.207,177,0.902,264,2.207,318,3.706,324,3.687,383,2.557,432,3.025,598,2.924,610,3.025,702,3.025,707,3.025,736,3.025,802,3.025,818,3.735,819,4.577,820,3.735,821,4.949,822,3.735,823,3.735,824,5.292,825,5.455,826,3.735,827,3.735,828,3.735,829,3.735,830,3.735,831,3.735,832,3.735,833,3.735,834,4.949,835,3.735,836,5.158,837,3.735,838,3.735,839,3.735,840,4.577,841,4.577,842,5.158,843,3.735,844,4.577,845,3.735,846,3.735,847,3.735,848,3.735,849,4.577,850,3.735,851,3.735,852,3.735,853,3.735,854,3.735,855,4.949,856,3.735,857,3.735,858,2.557]],["title/modules.html",[77,1.943]],["body/modules.html",[23,0.043,73,0.043,74,0.043,76,2.602,77,2.273,83,2.273,109,3.014,200,2.273,859,4.403,860,4.403,861,5.046,862,4.403]],["title/overview.html",[858,2.576]],["body/overview.html",[1,0.712,2,0.684,23,0.049,44,0.647,47,0.647,50,0.647,53,0.647,55,0.647,57,0.647,60,0.647,62,0.647,66,0.647,68,0.647,73,0.039,74,0.039,76,3.419,77,1.941,78,2.716,79,3.045,80,3.045,81,3.045,82,3.045,83,2.562,84,3.721,85,3.045,86,2.222,293,2.222,771,3.045,858,2.574,863,3.76,864,3.76,865,3.76]],["title/routes.html",[141,1.943]],["body/routes.html",[23,0.044,73,0.044,74,0.044,141,2.314]],["title/miscellaneous/variables.html",[498,2.272,866,1.869]],["body/miscellaneous/variables.html",[13,0.513,19,0.611,22,0.977,23,0.049,24,1.084,25,2.104,26,2.104,29,2.326,73,0.04,74,0.04,113,1.394,183,1.577,188,2.326,295,2.695,296,3.234,315,3.188,350,2.792,395,3.188,396,3.188,397,3.234,398,3.188,399,3.188,498,2.695,793,3.188,794,4.252,796,3.188,797,3.188,798,3.826,799,3.826,866,3.188,867,3.936,868,4.725,869,3.936,870,3.936,871,3.936,872,4.725,873,3.936,874,4.725,875,3.936]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":771,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["0.11.4",{"_index":815,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":795,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":772,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":865,"title":{},"body":{"overview.html":{}}}],["1/1",{"_index":781,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":774,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":780,"title":{},"body":{"coverage.html":{}}}],["100px",{"_index":766,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["11",{"_index":864,"title":{},"body":{"overview.html":{}}}],["13.2.0",{"_index":804,"title":{},"body":{"dependencies.html":{}}}],["13.2.2",{"_index":806,"title":{},"body":{"dependencies.html":{}}}],["13.2.3",{"_index":822,"title":{},"body":{"index.html":{}}}],["15/16",{"_index":778,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":863,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":813,"title":{},"body":{"dependencies.html":{}}}],["2/10",{"_index":776,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":788,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":775,"title":{},"body":{"coverage.html":{}}}],["2000",{"_index":634,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["25",{"_index":773,"title":{},"body":{"coverage.html":{}}}],["250px",{"_index":660,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["28",{"_index":786,"title":{},"body":{"coverage.html":{}}}],["280px",{"_index":762,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["3/5",{"_index":785,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":790,"title":{},"body":{"coverage.html":{}}}],["3000",{"_index":289,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["350px",{"_index":671,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["37",{"_index":789,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":792,"title":{},"body":{"coverage.html":{}}}],["4000",{"_index":519,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["50",{"_index":782,"title":{},"body":{"coverage.html":{}}}],["500px",{"_index":508,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["6.2",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["6.3",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["6/21",{"_index":787,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":784,"title":{},"body":{"coverage.html":{}}}],["60px",{"_index":664,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["66",{"_index":791,"title":{},"body":{"coverage.html":{}}}],["7.5.0",{"_index":811,"title":{},"body":{"dependencies.html":{}}}],["7px",{"_index":651,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["840px",{"_index":670,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["9/18",{"_index":783,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":777,"title":{},"body":{"coverage.html":{}}}],["access",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["accessed",{"_index":725,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["acme",{"_index":665,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["actual_component",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["add",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"index.html":{}}}],["add/remove",{"_index":493,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["added",{"_index":463,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["addfavoritemovie",{"_index":451,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["addfavoritemovie(movieid",{"_index":460,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["addfavoritemovies",{"_index":297,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{}}}],["addfavoritemovies(movieid",{"_index":321,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["again",{"_index":267,"title":{},"body":{"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["against",{"_index":580,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["align",{"_index":653,"title":{},"body":{"components/ProfileViewComponent.html":{},"components/WelcomePageComponent.html":{}}}],["angular",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":803,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":805,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":807,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"injectables/FetchApiDataService.html":{}}}],["angular/compiler",{"_index":808,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":809,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/dialog",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["angular/material/form",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input';//to",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"components/EditProfileComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["angular/material/toolbar",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditProfileComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"dependencies.html":{}}}],["api",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":397,"title":{},"body":{"injectables/FetchApiDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":76,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutes",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["approutingmodule",{"_index":83,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":352,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{}}}],["artifacts",{"_index":837,"title":{},"body":{"index.html":{}}}],["ask",{"_index":730,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["asks",{"_index":263,"title":{},"body":{"components/EditProfileComponent.html":{},"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{}}}],["assigning",{"_index":761,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["authorization",{"_index":412,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["auto",{"_index":649,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["automatically",{"_index":829,"title":{},"body":{"index.html":{}}}],["available",{"_index":200,"title":{},"body":{"components/DirectorCardComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/SynopsisCardComponent.html":{},"modules.html":{}}}],["back",{"_index":576,"title":{},"body":{"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["backend",{"_index":697,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["bad",{"_index":435,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["bar",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"components/EditProfileComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["bearer",{"_index":413,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["becomes",{"_index":197,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreDialogComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["being",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["bio",{"_index":211,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/MovieCardComponent.html":{}}}],["biography",{"_index":481,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["birth",{"_index":212,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/MovieCardComponent.html":{}}}],["birthday",{"_index":239,"title":{},"body":{"components/EditProfileComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["body",{"_index":424,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["boolean",{"_index":472,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["bootstrap",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrapped",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["bound",{"_index":682,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["brings",{"_index":692,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["browse",{"_index":861,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":836,"title":{},"body":{"index.html":{}}}],["call",{"_index":323,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["calls",{"_index":588,"title":{},"body":{"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["capabilities",{"_index":853,"title":{},"body":{"index.html":{}}}],["card",{"_index":179,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["card'},{'name",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["card.component",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["card.component.html",{"_index":181,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/MovieCardComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["card.component.scss",{"_index":180,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/MovieCardComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["card.component.ts",{"_index":176,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/MovieCardComponent.html":{},"components/SynopsisCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:108",{"_index":486,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:125",{"_index":465,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:14",{"_index":673,"title":{},"body":{"components/SynopsisCardComponent.html":{}}}],["card.component.ts:141",{"_index":461,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:15",{"_index":189,"title":{},"body":{"components/DirectorCardComponent.html":{}}}],["card.component.ts:158",{"_index":489,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:176",{"_index":471,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:183",{"_index":491,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:25",{"_index":209,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["card.component.ts:32",{"_index":204,"title":{},"body":{"components/DirectorCardComponent.html":{}}}],["card.component.ts:33",{"_index":674,"title":{},"body":{"components/SynopsisCardComponent.html":{}}}],["card.component.ts:35",{"_index":497,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:36",{"_index":496,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:37",{"_index":459,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:40",{"_index":495,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:41",{"_index":494,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:42",{"_index":500,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:45",{"_index":473,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:55",{"_index":469,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:70",{"_index":483,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:89",{"_index":475,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card/director",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/MovieCardComponent.html":{},"coverage.html":{}}}],["card/movie",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"coverage.html":{}}}],["card/synopsis",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"coverage.html":{}}}],["catcherror",{"_index":386,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["catcherror(this.handleerror",{"_index":408,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["center",{"_index":654,"title":{},"body":{"components/ProfileViewComponent.html":{},"components/WelcomePageComponent.html":{}}}],["change",{"_index":831,"title":{},"body":{"index.html":{}}}],["check",{"_index":264,"title":{},"body":{"components/EditProfileComponent.html":{},"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"index.html":{}}}],["child",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["children",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["choice",{"_index":848,"title":{},"body":{"index.html":{}}}],["class",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["classes",{"_index":723,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["cleared",{"_index":573,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["clears",{"_index":545,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cli",{"_index":821,"title":{},"body":{"index.html":{}}}],["client",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/FetchApiDataService.html":{},"miscellaneous/variables.html":{}}}],["close",{"_index":219,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreDialogComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["closes",{"_index":254,"title":{},"body":{"components/EditProfileComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["cluster_appmodule",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":432,"title":{},"body":{"injectables/FetchApiDataService.html":{},"index.html":{}}}],["color",{"_index":666,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["command",{"_index":849,"title":{},"body":{"index.html":{}}}],["communicate",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"overview.html":{}}}],["confirming",{"_index":259,"title":{},"body":{"components/EditProfileComponent.html":{},"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{}}}],["confirms",{"_index":574,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["console.error",{"_index":431,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["console.error('some",{"_index":428,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["console.log(res",{"_index":284,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["console.log(resp",{"_index":523,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["console.log(result",{"_index":715,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["console.log(this.favorited);//favorite",{"_index":619,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["console.log(this.favoritedtitle);//(favorite",{"_index":628,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["console.log(this.favoritemovies",{"_index":514,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["console.log(this.movies",{"_index":505,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["console.log(this.movies);//all",{"_index":616,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["console.log(this.user",{"_index":614,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["console.log(userdetails",{"_index":404,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["const",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["constructor",{"_index":186,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["constructor(data",{"_index":187,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreDialogComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["constructor(dialog",{"_index":750,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["constructor(fetchapidata",{"_index":231,"title":{},"body":{"components/EditProfileComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["constructor(http",{"_index":311,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["constructor(private",{"_index":402,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["constructor(public",{"_index":759,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["containing",{"_index":593,"title":{},"body":{"components/ProfileViewComponent.html":{},"components/WelcomePageComponent.html":{}}}],["contains",{"_index":737,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["contents",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["context",{"_index":798,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":767,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":752,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["created",{"_index":693,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["creates",{"_index":735,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["current",{"_index":338,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data",{"_index":183,"title":{},"body":{"components/DirectorCardComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"miscellaneous/variables.html":{}}}],["data.bio",{"_index":215,"title":{},"body":{"components/DirectorCardComponent.html":{}}}],["data.birth",{"_index":217,"title":{},"body":{"components/DirectorCardComponent.html":{}}}],["data.death",{"_index":218,"title":{},"body":{"components/DirectorCardComponent.html":{}}}],["data.description",{"_index":447,"title":{},"body":{"components/GenreDialogComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["data.name",{"_index":214,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreDialogComponent.html":{}}}],["data.service",{"_index":278,"title":{},"body":{"components/EditProfileComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["data.service.ts",{"_index":296,"title":{},"body":{"injectables/FetchApiDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["data.service.ts:112",{"_index":353,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:132",{"_index":357,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:151",{"_index":361,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:169",{"_index":356,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:187",{"_index":322,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:206",{"_index":333,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:226",{"_index":341,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:245",{"_index":337,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:265",{"_index":344,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:276",{"_index":364,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:32",{"_index":313,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:48",{"_index":381,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:61",{"_index":377,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:74",{"_index":351,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:93",{"_index":358,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.title",{"_index":675,"title":{},"body":{"components/SynopsisCardComponent.html":{}}}],["database",{"_index":701,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["date",{"_index":644,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["death",{"_index":213,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/MovieCardComponent.html":{}}}],["declarables",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["declarations",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["declare",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["declaring",{"_index":395,"title":{},"body":{"injectables/FetchApiDataService.html":{},"miscellaneous/variables.html":{}}}],["decorators",{"_index":207,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreDialogComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["delete",{"_index":334,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["deleted",{"_index":633,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["deletemovie",{"_index":298,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["deletemovie(movieid",{"_index":332,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["deleteprofile",{"_index":562,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["deleteuser",{"_index":299,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/ProfileViewComponent.html":{}}}],["dependencies",{"_index":78,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deregister",{"_index":569,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["deregistration",{"_index":570,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["description",{"_index":369,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/WelcomePageComponent.html":{}}}],["details",{"_index":252,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["dev",{"_index":827,"title":{},"body":{"index.html":{}}}],["development",{"_index":823,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":191,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["dialog'},{'name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["dialog.component",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"components/MovieCardComponent.html":{}}}],["dialog.component.html",{"_index":442,"title":{},"body":{"components/GenreDialogComponent.html":{}}}],["dialog.component.scss",{"_index":441,"title":{},"body":{"components/GenreDialogComponent.html":{}}}],["dialog.component.ts",{"_index":440,"title":{},"body":{"components/GenreDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:16",{"_index":443,"title":{},"body":{"components/GenreDialogComponent.html":{}}}],["dialog.component.ts:24",{"_index":446,"title":{},"body":{"components/GenreDialogComponent.html":{}}}],["dialog.component.ts:31",{"_index":445,"title":{},"body":{"components/GenreDialogComponent.html":{}}}],["dialog/genre",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"coverage.html":{}}}],["dialogref",{"_index":224,"title":{},"body":{"components/EditProfileComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["dialogs",{"_index":753,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["different",{"_index":731,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["dirctor's",{"_index":354,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["directed",{"_index":531,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["directive",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["directives",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":835,"title":{},"body":{"index.html":{}}}],["director",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["director's",{"_index":355,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["directorcardcomponent",{"_index":44,"title":{"components/DirectorCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directors/:name",{"_index":418,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["directory",{"_index":839,"title":{},"body":{"index.html":{}}}],["display",{"_index":477,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["displayed",{"_index":258,"title":{},"body":{"components/EditProfileComponent.html":{},"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["displaying",{"_index":708,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["dist",{"_index":838,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":768,"title":{},"body":{"coverage.html":{}}}],["documented",{"_index":550,"title":{},"body":{"components/NavbarComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["duration",{"_index":288,"title":{},"body":{"components/EditProfileComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["dynamic",{"_index":810,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":846,"title":{},"body":{"index.html":{}}}],["edit",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["editprofile",{"_index":243,"title":{},"body":{"components/EditProfileComponent.html":{},"components/ProfileViewComponent.html":{}}}],["editprofilecomponent",{"_index":47,"title":{"components/EditProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["edituser",{"_index":228,"title":{},"body":{"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{}}}],["edituser(userdata",{"_index":340,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["element",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["email",{"_index":238,"title":{},"body":{"components/EditProfileComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["empty",{"_index":349,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["end",{"_index":324,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/ProfileViewComponent.html":{},"index.html":{}}}],["entire",{"_index":316,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["environment",{"_index":794,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":366,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["error.error",{"_index":425,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["error.error.message",{"_index":430,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["error.status",{"_index":433,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["errorevent",{"_index":427,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["errors",{"_index":374,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["etc",{"_index":704,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["execute",{"_index":844,"title":{},"body":{"index.html":{}}}],["export",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["exported",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["exports",{"_index":174,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["extractresponsedata",{"_index":301,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["extractresponsedata(res",{"_index":343,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["extracttion",{"_index":348,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["false",{"_index":875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["family",{"_index":656,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["favorite",{"_index":326,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["favorite_border",{"_index":533,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["favorite_filled",{"_index":646,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["favorited",{"_index":560,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["favoritedtitle",{"_index":561,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["favoritemovies",{"_index":449,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["favorites",{"_index":518,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["favourite",{"_index":468,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["favouritemovies",{"_index":467,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["favourites",{"_index":462,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["fetch",{"_index":277,"title":{},"body":{"components/EditProfileComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["fetchapidata",{"_index":225,"title":{},"body":{"components/EditProfileComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["fetchapidataservice",{"_index":232,"title":{"injectables/FetchApiDataService.html":{}},"body":{"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"coverage.html":{}}}],["field",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["fields",{"_index":265,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["files",{"_index":832,"title":{},"body":{"index.html":{}}}],["filterfavorites",{"_index":563,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["filters",{"_index":578,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["first",{"_index":851,"title":{},"body":{"index.html":{}}}],["flex",{"_index":648,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["font",{"_index":655,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["form",{"_index":242,"title":{},"body":{"components/EditProfileComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["form'},{'name",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["form.component",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"components/WelcomePageComponent.html":{}}}],["form.component.html",{"_index":679,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["form.component.scss",{"_index":678,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts",{"_index":677,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:31",{"_index":681,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["form.component.ts:32",{"_index":722,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:34",{"_index":689,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["form.component.ts:35",{"_index":688,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["form.component.ts:36",{"_index":690,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["form.component.ts:39",{"_index":733,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:41",{"_index":732,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:42",{"_index":734,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:47",{"_index":727,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:48",{"_index":685,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["form.component.ts:51",{"_index":684,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["form.component.ts:57",{"_index":728,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["form/user",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["format",{"_index":331,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/ProfileViewComponent.html":{}}}],["formsmodule",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["function",{"_index":403,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{}}}],["further",{"_index":854,"title":{},"body":{"index.html":{}}}],["generate",{"_index":834,"title":{},"body":{"index.html":{}}}],["generated",{"_index":820,"title":{},"body":{"index.html":{}}}],["genre",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["genredialog",{"_index":444,"title":{},"body":{"components/GenreDialogComponent.html":{}}}],["genredialogcomponent",{"_index":50,"title":{"components/GenreDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["genres",{"_index":450,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["getallmovies",{"_index":302,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["getdirector",{"_index":303,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["getfavoritemovie",{"_index":304,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{}}}],["getfavorites",{"_index":564,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["getgenre",{"_index":305,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["getmovie",{"_index":416,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["getmovies",{"_index":452,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["gets",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["getsinglemovie",{"_index":306,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["getting",{"_index":816,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":307,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["getuser(username",{"_index":360,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["go",{"_index":857,"title":{},"body":{"index.html":{}}}],["gotomoviespage",{"_index":538,"title":{},"body":{"components/NavbarComponent.html":{}}}],["gotoprofilepage",{"_index":539,"title":{},"body":{"components/NavbarComponent.html":{}}}],["graph",{"_index":862,"title":{},"body":{"modules.html":{}}}],["handleerror",{"_index":308,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["handleerror(error",{"_index":362,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["handles",{"_index":365,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["happened",{"_index":436,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["hashed",{"_index":709,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["header",{"_index":661,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["headers",{"_index":411,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["height",{"_index":663,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["hello",{"_index":639,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["help",{"_index":855,"title":{},"body":{"index.html":{}}}],["hence",{"_index":199,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreDialogComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["html",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["http",{"_index":320,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["http://localhost:4200",{"_index":828,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":312,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["httpclientmodule",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorreponse",{"_index":370,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["httperrorresponse",{"_index":363,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["httpheaders",{"_index":385,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["https://myflix",{"_index":398,"title":{},"body":{"injectables/FetchApiDataService.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":515,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["identifier",{"_index":769,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":551,"title":{},"body":{"components/NavbarComponent.html":{}}}],["imagepath",{"_index":485,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["implements",{"_index":177,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["import",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["imported",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["imports",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["includes",{"_index":582,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["information",{"_index":335,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["informations",{"_index":342,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["inject",{"_index":210,"title":{},"body":{"components/DirectorCardComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["inject(mat_dialog_data",{"_index":208,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreDialogComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["injectable",{"_index":293,"title":{"injectables/FetchApiDataService.html":{}},"body":{"injectables/FetchApiDataService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":294,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["injected",{"_index":192,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreDialogComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["injection",{"_index":195,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreDialogComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["input",{"_index":275,"title":{},"body":{"components/EditProfileComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["inputs",{"_index":229,"title":{},"body":{"components/EditProfileComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["inside",{"_index":480,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["instanceof",{"_index":426,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["inviting",{"_index":729,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["invokes",{"_index":245,"title":{},"body":{"components/EditProfileComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["isfavorite",{"_index":453,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["isfavorite(movieid",{"_index":470,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["items",{"_index":549,"title":{},"body":{"components/NavbarComponent.html":{}}}],["json",{"_index":330,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/ProfileViewComponent.html":{}}}],["karma",{"_index":845,"title":{},"body":{"index.html":{}}}],["later",{"_index":438,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["legend",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["list",{"_index":327,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["literal",{"_index":188,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreDialogComponent.html":{},"components/SynopsisCardComponent.html":{},"miscellaneous/variables.html":{}}}],["loads",{"_index":590,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["local",{"_index":571,"title":{},"body":{"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{}}}],["localstorage",{"_index":546,"title":{},"body":{"components/NavbarComponent.html":{}}}],["localstorage.clear",{"_index":554,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{}}}],["localstorage.getitem('password",{"_index":605,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["localstorage.getitem('token",{"_index":409,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["localstorage.getitem('user",{"_index":273,"title":{},"body":{"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["localstorage.setitem('password",{"_index":710,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["localstorage.setitem('token",{"_index":713,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["localstorage.setitem('user",{"_index":282,"title":{},"body":{"components/EditProfileComponent.html":{},"components/UserLoginFormComponent.html":{}}}],["location.reload",{"_index":635,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["log",{"_index":378,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["logged",{"_index":579,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["logic",{"_index":699,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["login",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["logindata",{"_index":686,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["loginuser",{"_index":680,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["logout",{"_index":540,"title":{},"body":{"components/NavbarComponent.html":{}}}],["logs",{"_index":544,"title":{},"body":{"components/NavbarComponent.html":{}}}],["main",{"_index":764,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["make",{"_index":384,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["making",{"_index":317,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["map",{"_index":387,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["map(this.extractresponsedata",{"_index":415,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["margin",{"_index":650,"title":{},"body":{"components/ProfileViewComponent.html":{},"components/WelcomePageComponent.html":{}}}],["mat",{"_index":647,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["mat_dialog_data",{"_index":194,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreDialogComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["matbuttonmodule",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":276,"title":{},"body":{"components/EditProfileComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/WelcomePageComponent.html":{}}}],["matdialogmodule",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialogref",{"_index":233,"title":{},"body":{"components/EditProfileComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["material",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":234,"title":{},"body":{"components/EditProfileComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["matsnackbarmodule",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":662,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["media",{"_index":668,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["mediumdate",{"_index":645,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["message",{"_index":262,"title":{},"body":{"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["method",{"_index":246,"title":{},"body":{"components/EditProfileComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["methods",{"_index":184,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["miscellaneous",{"_index":866,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modal",{"_index":700,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["module",{"_index":75,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"injectables/FetchApiDataService.html":{}}}],["modules",{"_index":77,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":856,"title":{},"body":{"index.html":{}}}],["movie",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["movie._id",{"_index":526,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["movie.director.name",{"_index":532,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["movie.title",{"_index":529,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["moviecardcomponent",{"_index":53,"title":{"components/MovieCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["movieid",{"_index":328,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{}}}],["movieid{string",{"_index":630,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["movies",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{}}}],["movies(may",{"_index":620,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["movies/:title",{"_index":417,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["movies/genres/:name",{"_index":419,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["moviesapp.herokuapp.com",{"_index":399,"title":{},"body":{"injectables/FetchApiDataService.html":{},"miscellaneous/variables.html":{}}}],["multiple",{"_index":622,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["myflix",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/WelcomePageComponent.html":{}}}],["myflixangularclient",{"_index":818,"title":{},"body":{"index.html":{}}}],["name",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["navbar",{"_index":535,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["navbar.component.html",{"_index":537,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.scss",{"_index":536,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["navbarcomponent",{"_index":55,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":610,"title":{},"body":{"components/ProfileViewComponent.html":{},"index.html":{}}}],["navigates",{"_index":255,"title":{},"body":{"components/EditProfileComponent.html":{},"components/UserLoginFormComponent.html":{}}}],["need",{"_index":850,"title":{},"body":{"index.html":{}}}],["needed",{"_index":726,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["needs",{"_index":479,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["new",{"_index":383,"title":{},"body":{"injectables/FetchApiDataService.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":825,"title":{},"body":{"index.html":{}}}],["ngmodel",{"_index":683,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["ngmodule",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":185,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["non",{"_index":345,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["notifications",{"_index":694,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["null",{"_index":421,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["object",{"_index":350,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":329,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["observable's",{"_index":372,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["observables",{"_index":390,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["occurred",{"_index":429,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["ok",{"_index":292,"title":{},"body":{"components/EditProfileComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["oninit",{"_index":178,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["opendirector",{"_index":454,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["opendirector(name",{"_index":474,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["openeditprofile",{"_index":565,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["opengenre",{"_index":455,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["opengenre(name",{"_index":482,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["opens",{"_index":476,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/WelcomePageComponent.html":{}}}],["opensynopsis",{"_index":456,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["opensynopsis(title",{"_index":484,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["openuserlogindialog",{"_index":748,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["openuserregistrationdialog",{"_index":749,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["optional",{"_index":203,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["order",{"_index":249,"title":{},"body":{"components/EditProfileComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["out",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"components/NavbarComponent.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":201,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreDialogComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["overview",{"_index":858,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":802,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["page.component",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["page.component.html",{"_index":747,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.scss",{"_index":746,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.ts",{"_index":745,"title":{},"body":{"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["page.component.ts:17",{"_index":751,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.ts:24",{"_index":758,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.ts:25",{"_index":755,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.ts:30",{"_index":757,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.ts:39",{"_index":756,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page/welcome",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["param",{"_index":401,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/WelcomePageComponent.html":{}}}],["parameters",{"_index":202,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["params",{"_index":314,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["passed",{"_index":190,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreDialogComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["passing",{"_index":478,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["password",{"_index":237,"title":{},"body":{"components/EditProfileComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["path",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["pathmatch",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["pipe",{"_index":414,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["platform",{"_index":847,"title":{},"body":{"index.html":{}}}],["please",{"_index":437,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["point",{"_index":325,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/ProfileViewComponent.html":{}}}],["populate",{"_index":591,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["populated",{"_index":241,"title":{},"body":{"components/EditProfileComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["populates",{"_index":466,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["popup",{"_index":257,"title":{},"body":{"components/EditProfileComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["prefix",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["private",{"_index":300,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/UserLoginFormComponent.html":{}}}],["production",{"_index":874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["profile'},{'name",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["profile.component",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"components/ProfileViewComponent.html":{}}}],["profile.component.html",{"_index":223,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.scss",{"_index":222,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts",{"_index":221,"title":{},"body":{"components/EditProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:23",{"_index":274,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:29",{"_index":235,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:32",{"_index":270,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:33",{"_index":269,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:34",{"_index":272,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:35",{"_index":271,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:38",{"_index":268,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:48",{"_index":244,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile/edit",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"components/EditProfileComponent.html":{},"components/ProfileViewComponent.html":{},"coverage.html":{}}}],["profiledata",{"_index":248,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profileviewcomponent",{"_index":57,"title":{"components/ProfileViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["project",{"_index":819,"title":{},"body":{"index.html":{}}}],["promises",{"_index":392,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["property",{"_index":198,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/SynopsisCardComponent.html":{},"components/WelcomePageComponent.html":{}}}],["provide",{"_index":315,"title":{},"body":{"injectables/FetchApiDataService.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":400,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["providers",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":182,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["re",{"_index":547,"title":{},"body":{"components/NavbarComponent.html":{}}}],["redirectto",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["reference",{"_index":736,"title":{},"body":{"components/UserRegistrationFormComponent.html":{},"index.html":{}}}],["register",{"_index":382,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/UserRegistrationFormComponent.html":{}}}],["registeruser",{"_index":721,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["registration",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["reload",{"_index":830,"title":{},"body":{"index.html":{}}}],["remove",{"_index":599,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["removed",{"_index":336,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["removefavorite",{"_index":566,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["removefavorite(id",{"_index":596,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["removefavoritemovie",{"_index":457,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["removefavoritemovie(movieid",{"_index":488,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["rendered",{"_index":754,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["renders",{"_index":594,"title":{},"body":{"components/ProfileViewComponent.html":{},"components/WelcomePageComponent.html":{}}}],["requests",{"_index":368,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/UserLoginFormComponent.html":{}}}],["require",{"_index":799,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":290,"title":{},"body":{"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{}}}],["res.username",{"_index":283,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["reset",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resp",{"_index":504,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["resp.favoritemovies",{"_index":513,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["response",{"_index":347,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["responses",{"_index":367,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["responsible",{"_index":695,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["result",{"_index":717,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["result.token",{"_index":714,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["result.user.username",{"_index":712,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["results",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrieves",{"_index":617,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["return",{"_index":389,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["returned",{"_index":371,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/UserLoginFormComponent.html":{}}}],["returns",{"_index":205,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/FetchApiDataService.html":{}}}],["root'},{'name",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["route",{"_index":687,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["routed",{"_index":575,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["router",{"_index":226,"title":{},"body":{"components/EditProfileComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{}}}],["routermodule",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(approutes",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(routes",{"_index":173,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":141,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/NavbarComponent.html":{},"routes.html":{}}}],["routing.module",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":172,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":824,"title":{},"body":{"index.html":{}}}],["running",{"_index":840,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":394,"title":{},"body":{"injectables/FetchApiDataService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":388,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["same",{"_index":621,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["sans",{"_index":658,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["scaffolding",{"_index":833,"title":{},"body":{"index.html":{}}}],["screen",{"_index":669,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["selected",{"_index":464,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["sending",{"_index":696,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["serif",{"_index":659,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["serve",{"_index":826,"title":{},"body":{"index.html":{}}}],["server",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["service",{"_index":247,"title":{},"body":{"components/EditProfileComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["set",{"_index":705,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["sets",{"_index":724,"title":{},"body":{"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["side",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["sign",{"_index":742,"title":{},"body":{"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["similar",{"_index":391,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["snackbar",{"_index":227,"title":{},"body":{"components/EditProfileComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["something",{"_index":434,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["soon",{"_index":589,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["spec\\.ts",{"_index":873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":359,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["specified",{"_index":375,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["src/.../environment.prod.ts",{"_index":869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../fetch",{"_index":867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/director",{"_index":175,"title":{},"body":{"components/DirectorCardComponent.html":{},"coverage.html":{}}}],["src/app/edit",{"_index":220,"title":{},"body":{"components/EditProfileComponent.html":{},"coverage.html":{}}}],["src/app/fetch",{"_index":295,"title":{},"body":{"injectables/FetchApiDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/genre",{"_index":439,"title":{},"body":{"components/GenreDialogComponent.html":{},"coverage.html":{}}}],["src/app/movie",{"_index":448,"title":{},"body":{"components/MovieCardComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts",{"_index":534,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts:26",{"_index":548,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:31",{"_index":541,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:38",{"_index":542,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:46",{"_index":543,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/profile",{"_index":556,"title":{},"body":{"components/ProfileViewComponent.html":{},"coverage.html":{}}}],["src/app/synopsis",{"_index":672,"title":{},"body":{"components/SynopsisCardComponent.html":{},"coverage.html":{}}}],["src/app/user",{"_index":676,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"coverage.html":{}}}],["src/app/welcome",{"_index":744,"title":{},"body":{"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":793,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":796,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":797,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":817,"title":{"index.html":{}},"body":{}}],["state",{"_index":581,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["statements",{"_index":770,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":339,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["steelblue",{"_index":667,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["storage",{"_index":572,"title":{},"body":{"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{}}}],["store",{"_index":499,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["stored",{"_index":702,"title":{},"body":{"components/UserLoginFormComponent.html":{},"index.html":{}}}],["stream",{"_index":373,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["subsequent",{"_index":703,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["success",{"_index":260,"title":{},"body":{"components/EditProfileComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["successful",{"_index":253,"title":{},"body":{"components/EditProfileComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["successful.please",{"_index":741,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["successfully",{"_index":286,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["such",{"_index":719,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["support",{"_index":859,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":860,"title":{},"body":{"modules.html":{}}}],["synopsis",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["synopsiscardcomponent",{"_index":60,"title":{"components/SynopsisCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["table",{"_index":801,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":800,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["test",{"_index":843,"title":{},"body":{"index.html":{}}}],["testing",{"_index":852,"title":{},"body":{"index.html":{}}}],["tests",{"_index":842,"title":{},"body":{"index.html":{}}}],["text",{"_index":652,"title":{},"body":{"components/ProfileViewComponent.html":{},"components/WelcomePageComponent.html":{}}}],["thereby",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["this.addfavoritemovie(movie._id",{"_index":530,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.dialog.open(directorcardcomponent",{"_index":509,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.dialog.open(editprofilecomponent",{"_index":615,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["this.dialog.open(genredialogcomponent",{"_index":506,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.dialog.open(synopsiscardcomponent",{"_index":510,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["this.dialog.open(userloginformcomponent",{"_index":763,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["this.dialog.open(userregistrationformcomponent",{"_index":760,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["this.dialogref.close",{"_index":280,"title":{},"body":{"components/EditProfileComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["this.favorited",{"_index":618,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["this.favorited.includes(movie._id",{"_index":626,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["this.favoritedtitle",{"_index":629,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["this.favoritedtitle.push(movie",{"_index":627,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["this.favoritemovies",{"_index":512,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.favoritemovies.some((movie",{"_index":525,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.fetchapidata.addfavoritemovies(movieid).subscribe((resp",{"_index":516,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.fetchapidata.deletemovie(id).subscribe((resp",{"_index":631,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["this.fetchapidata.deletemovie(movieid).subscribe((resp",{"_index":522,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.fetchapidata.deleteuser().subscribe((res",{"_index":636,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["this.fetchapidata.edituser(this.userdata).subscribe((res",{"_index":279,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.fetchapidata.getallmovies().subscribe((resp",{"_index":502,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["this.fetchapidata.getuser(user).subscribe((resp",{"_index":511,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["this.fetchapidata.userlogin(this.userdata).subscribe((result",{"_index":698,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["this.fetchapidata.userregistration(this.userdata).subscribe((result",{"_index":739,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["this.filterfavorites",{"_index":624,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["this.getfavoritemovie",{"_index":521,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.getfavorites",{"_index":612,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["this.getmovies",{"_index":501,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["this.getuser",{"_index":611,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["this.http",{"_index":319,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["this.http.delete(apiurl",{"_index":422,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["this.http.get(apiurl",{"_index":410,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["this.http.post(apiurl",{"_index":405,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["this.http.put(apiurl",{"_index":423,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["this.isfavorite(movie._id",{"_index":527,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.movies",{"_index":503,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["this.movies.foreach((movie",{"_index":625,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["this.ngoninit",{"_index":520,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.removefavoritemovie(movie._id",{"_index":528,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.router.navigate(['movies",{"_index":552,"title":{},"body":{"components/NavbarComponent.html":{},"components/UserLoginFormComponent.html":{}}}],["this.router.navigate(['profile",{"_index":553,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.router.navigate(['welcome",{"_index":638,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["this.router.navigate(['welcome']).then",{"_index":555,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.snackbar.open",{"_index":524,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.snackbar.open('no",{"_index":718,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["this.snackbar.open('try",{"_index":291,"title":{},"body":{"components/EditProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["this.snackbar.open(`${title",{"_index":517,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.snackbar.open(`movie",{"_index":632,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["this.snackbar.open(`user",{"_index":637,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["this.snackbar.open(result.user.username",{"_index":716,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["this.snackbar.open(this.user.username",{"_index":285,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.snackbar.open(this.userdata.username",{"_index":740,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["this.user",{"_index":613,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["this.user.username",{"_index":641,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["this.userdata.password",{"_index":711,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["throwerror",{"_index":393,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["times",{"_index":623,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["titles",{"_index":583,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["toggle",{"_index":492,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["togglefavorite",{"_index":458,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["togglefavorite(movie",{"_index":490,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["token",{"_index":196,"title":{},"body":{"components/DirectorCardComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{}}}],["top",{"_index":765,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["true",{"_index":872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["try",{"_index":266,"title":{},"body":{"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["tslib",{"_index":812,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typed",{"_index":346,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["unhashed",{"_index":706,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["unit",{"_index":841,"title":{},"body":{"index.html":{}}}],["unsuccessful",{"_index":261,"title":{},"body":{"components/EditProfileComponent.html":{},"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["up",{"_index":743,"title":{},"body":{"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["update",{"_index":250,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["updated",{"_index":287,"title":{},"body":{"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/ProfileViewComponent.html":{}}}],["url",{"_index":396,"title":{},"body":{"injectables/FetchApiDataService.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":598,"title":{},"body":{"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"index.html":{}}}],["used",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"injectables/FetchApiDataService.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["user",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["user's",{"_index":251,"title":{},"body":{"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{}}}],["user.birthday",{"_index":643,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["user.email",{"_index":642,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["user.try",{"_index":720,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["user.username",{"_index":640,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["userdata",{"_index":230,"title":{},"body":{"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["userdetails",{"_index":379,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["userdetails).pipe",{"_index":407,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["userlogin",{"_index":309,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["userlogin(userdetails",{"_index":376,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["userloginformcomponent",{"_index":62,"title":{"components/UserLoginFormComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["username",{"_index":236,"title":{},"body":{"components/EditProfileComponent.html":{},"injectables/FetchApiDataService.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["userregistration",{"_index":310,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/UserRegistrationFormComponent.html":{}}}],["userregistration(userdetails",{"_index":380,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["userregistrationform",{"_index":738,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["userregistrationformcomponent",{"_index":66,"title":{"components/UserRegistrationFormComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["users",{"_index":406,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["users/:username/movies",{"_index":420,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["using",{"_index":193,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreDialogComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":240,"title":{},"body":{"components/EditProfileComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["var",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["variable",{"_index":779,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":498,"title":{"miscellaneous/variables.html":{}},"body":{"components/MovieCardComponent.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":707,"title":{},"body":{"components/UserLoginFormComponent.html":{},"index.html":{}}}],["via",{"_index":318,"title":{},"body":{"injectables/FetchApiDataService.html":{},"index.html":{}}}],["view",{"_index":256,"title":{},"body":{"components/EditProfileComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{}}}],["view'},{'name",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["view.component",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["view.component.html",{"_index":559,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.scss",{"_index":558,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.ts",{"_index":557,"title":{},"body":{"components/ProfileViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:102",{"_index":577,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.ts:119",{"_index":597,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.ts:127",{"_index":595,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.ts:143",{"_index":568,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.ts:25",{"_index":609,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.ts:26",{"_index":606,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.ts:27",{"_index":601,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.ts:28",{"_index":602,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.ts:29",{"_index":604,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.ts:31",{"_index":567,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.ts:34",{"_index":603,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.ts:35",{"_index":608,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.ts:36",{"_index":600,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.ts:37",{"_index":607,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.ts:45",{"_index":587,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.ts:56",{"_index":586,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.ts:69",{"_index":592,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.ts:75",{"_index":585,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.ts:88",{"_index":584,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view/profile",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"components/ProfileViewComponent.html":{},"coverage.html":{}}}],["virtue",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["void",{"_index":206,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["welcome",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["welcomepagecomponent",{"_index":68,"title":{"components/WelcomePageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileComponent.html":{},"components/GenreDialogComponent.html":{},"components/MovieCardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileViewComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["well",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["width",{"_index":507,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/WelcomePageComponent.html":{}}}],["window.location.reload",{"_index":281,"title":{},"body":{"components/EditProfileComponent.html":{},"components/NavbarComponent.html":{}}}],["within",{"_index":487,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["work",{"_index":657,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["year",{"_index":216,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/MovieCardComponent.html":{}}}],["you'll",{"_index":691,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["zone.js",{"_index":814,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'myFlix-Angular-client'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent {\n  title = 'myFlix-Angular-client';\n\n}\n\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'GenreDialogComponent', 'selector': 'app-genre-dialog'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProfileViewComponent', 'selector': 'app-profile-view'},{'name': 'SynopsisCardComponent', 'selector': 'app-synopsis-card'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDirectorCardComponent\n\nDirectorCardComponent\n\nAppModule -->\n\nDirectorCardComponent->AppModule\n\n\n\n\n\nEditProfileComponent\n\nEditProfileComponent\n\nAppModule -->\n\nEditProfileComponent->AppModule\n\n\n\n\n\nGenreDialogComponent\n\nGenreDialogComponent\n\nAppModule -->\n\nGenreDialogComponent->AppModule\n\n\n\n\n\nMovieCardComponent\n\nMovieCardComponent\n\nAppModule -->\n\nMovieCardComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nProfileViewComponent\n\nProfileViewComponent\n\nAppModule -->\n\nProfileViewComponent->AppModule\n\n\n\n\n\nSynopsisCardComponent\n\nSynopsisCardComponent\n\nAppModule -->\n\nSynopsisCardComponent->AppModule\n\n\n\n\n\nUserLoginFormComponent\n\nUserLoginFormComponent\n\nAppModule -->\n\nUserLoginFormComponent->AppModule\n\n\n\n\n\nUserRegistrationFormComponent\n\nUserRegistrationFormComponent\n\nAppModule -->\n\nUserRegistrationFormComponent->AppModule\n\n\n\n\n\nWelcomePageComponent\n\nWelcomePageComponent\n\nAppModule -->\n\nWelcomePageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            DirectorCardComponent\n                        \n                        \n                            EditProfileComponent\n                        \n                        \n                            GenreDialogComponent\n                        \n                        \n                            MovieCardComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            ProfileViewComponent\n                        \n                        \n                            SynopsisCardComponent\n                        \n                        \n                            UserLoginFormComponent\n                        \n                        \n                            UserRegistrationFormComponent\n                        \n                        \n                            WelcomePageComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /**\n * The AppModule is used to import and declare all of the components that will be used in the app, \n * as well as to import all of the modules that will be used. The AppComponent is bootstrapped when the\n * module is bootstrapped, and thereby gets access to the module contents. By virtue of being children of\n * the AppComponent (which is the root component), all the other components get access to exported \n * declarables of the imported modules in the AppModule too, as well as to the other child components.\n * @module AppModule\n */\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';// the client app to communicate with the API or server-side 6.2\n\nimport { MatInputModule } from '@angular/material/input';//to add the modules from the Material components 6.3\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\n\nimport { UserRegistrationFormComponent } from './user-registration-form/user-registration-form.component';\nimport { UserLoginFormComponent } from './user-login-form/user-login-form.component';\nimport { MovieCardComponent } from './movie-card/movie-card.component';\nimport { WelcomePageComponent } from './welcome-page/welcome-page.component';\nimport { GenreDialogComponent } from './genre-dialog/genre-dialog.component';\nimport { DirectorCardComponent } from './director-card/director-card.component';\nimport { SynopsisCardComponent } from './synopsis-card/synopsis-card.component';\nimport { ProfileViewComponent } from './profile-view/profile-view.component';\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\nimport { NavbarComponent } from './navbar/navbar.component';\n\n\nconst appRoutes: Routes = [\n  { path: 'welcome', component: WelcomePageComponent },\n  { path: 'movies', component: MovieCardComponent },\n  { path: '', redirectTo: 'welcome', pathMatch: 'prefix' },\n  { path: 'profile', component: ProfileViewComponent },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserRegistrationFormComponent,\n    UserLoginFormComponent,\n    MovieCardComponent,\n    WelcomePageComponent,\n    GenreDialogComponent,\n    DirectorCardComponent,\n    SynopsisCardComponent,\n    ProfileViewComponent,\n    EditProfileComponent,\n    NavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    RouterModule.forRoot(appRoutes),\n    MatIconModule,\n    MatToolbarModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DirectorCardComponent.html":{"url":"components/DirectorCardComponent.html","title":"component - DirectorCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DirectorCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/director-card/director-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-director-card\n            \n\n            \n                styleUrls\n                ./director-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./director-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/director-card/director-card.component.ts:15\n                            \n                        \n\n                \n                    \n                            The data that was passed to the Director dialog in the MovieCardComponent is injected in to the\nconstructor using the MAT_DIALOG_DATA injection token. The data becomes a property on the class\nand is hence available to be output in the template.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/director-card/director-card.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/director-card/director-card.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-director-card',\n  templateUrl: './director-card.component.html',\n  styleUrls: ['./director-card.component.scss']\n})\nexport class DirectorCardComponent implements OnInit {\n\n  /**\n   * The data that was passed to the Director dialog in the MovieCardComponent is injected in to the \n   * constructor using the MAT_DIALOG_DATA injection token. The data becomes a property on the class\n   * and is hence available to be output in the template.\n   */\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA)\n    public data: {\n      Name: string,\n      Bio: string,\n      Birth: string,\n      Death: string\n    }) { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    {{ data.Name }}\n    Bio: {{ data.Bio }}\n    Birth Year: {{ data.Birth }}\n    Death Year: {{ data.Death }}\n    \n        \n            Close\n        \n    \n\n    \n\n    \n                \n                    ./director-card.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ data.Name }}    Bio: {{ data.Bio }}    Birth Year: {{ data.Birth }}    Death Year: {{ data.Death }}                        Close            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'GenreDialogComponent', 'selector': 'app-genre-dialog'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProfileViewComponent', 'selector': 'app-profile-view'},{'name': 'SynopsisCardComponent', 'selector': 'app-synopsis-card'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DirectorCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditProfileComponent.html":{"url":"components/EditProfileComponent.html","title":"component - EditProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-profile/edit-profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-profile\n            \n\n            \n                styleUrls\n                ./edit-profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                fetchApiData\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                editUser\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fetchApiData: FetchApiDataService, dialogRef: MatDialogRef, snackBar: MatSnackBar, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-profile/edit-profile.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fetchApiData\n                                                  \n                                                        \n                                                                        FetchApiDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userData\n                    \n                \n                \n                    \n                        Type :     { Username: string; Password: string; Email: string; Birthday: string; }\n\n                    \n                \n                \n                    \n                        Default value : { Username: '', Password: '', Email: '', Birthday: '' }\n                    \n                \n                        \n                            \n                                    Defined in src/app/edit-profile/edit-profile.component.ts:29\n                            \n                        \n                \n                    \n                        userData values are populated by form inputs in the editprofile template\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        editUser\n                        \n                    \n                \n            \n            \n                \neditUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-profile/edit-profile.component.ts:48\n                \n            \n\n\n            \n                \n                    Invokes the editUser method on the fetchApiData service, with the profileData from the form,\nin order to update the user's details. A successful update closes the form and navigates the user\nto the movies view. A popup is displayed confirming update success. If unsuccessful, a popup message\nasks the user to check the form fields and try again.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-profile/edit-profile.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/edit-profile/edit-profile.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchApiData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FetchApiDataService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/edit-profile/edit-profile.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/edit-profile/edit-profile.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/edit-profile/edit-profile.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : localStorage.getItem('user')\n                    \n                \n                    \n                        \n                                Defined in src/app/edit-profile/edit-profile.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { FetchApiDataService } from '../fetch-api-data.service';\n\n\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.scss']\n})\n\nexport class EditProfileComponent implements OnInit {\n\n  user: any = localStorage.getItem('user');\n\n  /** \n   * userData values are populated by form inputs in the editprofile template\n   */\n\n  @Input() userData = { Username: '', Password: '', Email: '', Birthday: '' };\n\n  constructor(\n    public fetchApiData: FetchApiDataService,\n    public dialogRef: MatDialogRef,\n    public snackBar: MatSnackBar,\n    public router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n     * Invokes the editUser method on the fetchApiData service, with the profileData from the form,\n     * in order to update the user's details. A successful update closes the form and navigates the user\n     * to the movies view. A popup is displayed confirming update success. If unsuccessful, a popup message\n     * asks the user to check the form fields and try again.\n     */\n\n  editUser(): void {\n    this.fetchApiData.editUser(this.userData).subscribe((res) => {\n      this.dialogRef.close();\n      window.location.reload();\n      localStorage.setItem('user', res.Username)\n      console.log(res)\n      this.snackBar.open(this.user.Username, 'Successfully updated user details!', {\n        duration: 3000\n      });\n    }, (res) => {\n      this.snackBar.open('Try again', 'OK', {\n        duration: 3000\n      });\n    })\n  }\n}\n\n    \n\n    \n        \n    \n        Edit Profile\n    \n    \n        \n            \n                \n            \n            \n                \n            \n            \n                \n            \n            \n                \n            \n        \n    \n    \n        \n            Update\n        \n    \n\n    \n\n    \n                \n                    ./edit-profile.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Edit Profile                                                                                                                                                                                                                    Update            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'GenreDialogComponent', 'selector': 'app-genre-dialog'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProfileViewComponent', 'selector': 'app-profile-view'},{'name': 'SynopsisCardComponent', 'selector': 'app-synopsis-card'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FetchApiDataService.html":{"url":"injectables/FetchApiDataService.html","title":"injectable - FetchApiDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FetchApiDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/fetch-api-data.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFavoriteMovies\n                            \n                            \n                                deleteMovie\n                            \n                            \n                                deleteUser\n                            \n                            \n                                editUser\n                            \n                            \n                                    Private\n                                extractResponseData\n                            \n                            \n                                getAllMovies\n                            \n                            \n                                getDirector\n                            \n                            \n                                getFavoriteMovie\n                            \n                            \n                                getGenre\n                            \n                            \n                                getSingleMovie\n                            \n                            \n                                getUser\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Public\n                                userLogin\n                            \n                            \n                                    Public\n                                userRegistration\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/fetch-api-data.service.ts:32\n                            \n                        \n\n                \n                    \n                            Inject the HttpClient module to the constructor params\nThis will provide HttpClient to the entire class, making it available via this.http\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addFavoriteMovies\n                        \n                    \n                \n            \n            \n                \naddFavoriteMovies(movieId: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:187\n                \n            \n\n\n            \n                \n                    call API end-point to add a movie to the user's favorite list\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    movieId\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        the user's favorite list in json format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteMovie\n                        \n                    \n                \n            \n            \n                \ndeleteMovie(movieId: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:206\n                \n            \n\n\n            \n                \n                    call API end-point to delete a user's favorite movie\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    movieId\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        updated user's information after removed a movie from the list in json format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:245\n                \n            \n\n\n            \n                \n                    call API end-point to delete the current user\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        delete status\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editUser\n                        \n                    \n                \n            \n            \n                \neditUser(userData: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:226\n                \n            \n\n\n            \n                \n                    call API end-point to edit the user's informations\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        updated user's information\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        extractResponseData\n                        \n                    \n                \n            \n            \n                \n                    \n                    extractResponseData(res: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:265\n                \n            \n\n\n            \n                \n                    Non-typed response extracttion\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        response || empty object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllMovies\n                        \n                    \n                \n            \n            \n                \ngetAllMovies()\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:74\n                \n            \n\n\n            \n                \n                    call API end-point to get all movies\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        array of movies object in json format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDirector\n                        \n                    \n                \n            \n            \n                \ngetDirector()\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:112\n                \n            \n\n\n            \n                \n                    call API end-point to get a director data by dirctor's name\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        a director's data in json format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFavoriteMovie\n                        \n                    \n                \n            \n            \n                \ngetFavoriteMovie()\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:169\n                \n            \n\n\n            \n                \n                    call API end-point to get a user's favorite movies list\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        a list of the user's favorite movies in json format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGenre\n                        \n                    \n                \n            \n            \n                \ngetGenre()\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:132\n                \n            \n\n\n            \n                \n                    call API end-point to get a genre data\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        a genre data in json format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSingleMovie\n                        \n                    \n                \n            \n            \n                \ngetSingleMovie()\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:93\n                \n            \n\n\n            \n                \n                    call API end-point to get a specific movie by Title\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        a movie object in json format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser(username: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:151\n                \n            \n\n\n            \n                \n                    call API end-point to get a user's informations\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        a user's information\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:276\n                \n            \n\n\n            \n                \n                    Handles error responses to Http requests.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The HttpErrorReponse returned on the Observable's response stream.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        An observable that errors with the specified message.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        userLogin\n                        \n                    \n                \n            \n            \n                \n                    \n                    userLogin(userDetails: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:61\n                \n            \n\n\n            \n                \n                    call API end-point to log in a user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDetails\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        user's data in json format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        userRegistration\n                        \n                    \n                \n            \n            \n                \n                    \n                    userRegistration(userDetails: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:48\n                \n            \n\n\n            \n                \n                    call API end-point to register a new user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDetails\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        a new user object\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n// Used to make Http requests to the Api\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\n\nimport { catchError, map } from 'rxjs/operators';\n\n// Requests return Observables (similar to Promises) \nimport { Observable, throwError } from 'rxjs';\n\n\n\n/**\n *Declaring the api url that will provide data for the client app\n */\nconst apiUrl = 'https://myflix-moviesapp.herokuapp.com/';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class FetchApiDataService {\n\n  /**\n    * Inject the HttpClient module to the constructor params\n   This will provide HttpClient to the entire class, making it available via this.http\n    * @param http \n    */\n  constructor(private http: HttpClient) {\n  }\n\n  /**\n    * call API end-point to register a new user\n    * @function userRegistration\n    * @param userDetails {any}\n    * @returns a new user object\n    */\n  public userRegistration(userDetails: any): Observable {\n    console.log(userDetails);\n    return this.http.post(apiUrl + 'users', userDetails).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n\n  /**\n  * call API end-point to log in a user\n  * @param userDetails {any}\n  * @returns user's data in json format\n  */\n  public userLogin(userDetails: any): Observable {\n    console.log(userDetails);\n    return this.http.post(apiUrl + 'login', userDetails).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n\n  /**\n   * call API end-point to get all movies\n   * @function getAllMovies\n   * @return array of movies object in json format\n   */\n  getAllMovies(): Observable {\n    const token = localStorage.getItem('token');\n    return this.http.get(apiUrl + 'movies', {\n      headers: new HttpHeaders(\n        {\n          Authorization: 'Bearer ' + token,\n        })\n    }).pipe(\n      map(this.extractResponseData),\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n   * call API end-point to get a specific movie by Title\n   * @function getMovie\n   * @param title {any}\n   * @returns a movie object in json format\n   */\n  getSingleMovie(): Observable {\n    const token = localStorage.getItem('token');\n    return this.http.get(apiUrl + 'movies/:Title', {\n      headers: new HttpHeaders(\n        {\n          Authorization: 'Bearer ' + token,\n        })\n    }).pipe(\n      map(this.extractResponseData),\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n    * call API end-point to get a director data by dirctor's name\n    * @function getDirector\n    * @param director {any}\n    * @returns a director's data in json format\n    */\n  getDirector(): Observable {\n    const token = localStorage.getItem('token');\n    return this.http.get(apiUrl + 'directors/:Name', {\n      headers: new HttpHeaders(\n        {\n          Authorization: 'Bearer ' + token,\n        })\n    }).pipe(\n      map(this.extractResponseData),\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n   * call API end-point to get a genre data\n   * @function getGenre\n   * @param genre {any}\n   * @returns a genre data in json format\n   */\n\n  getGenre(): Observable {\n    const token = localStorage.getItem('token');\n    return this.http.get(apiUrl + 'movies/genres/:Name', {\n      headers: new HttpHeaders(\n        {\n          Authorization: 'Bearer ' + token,\n        })\n    }).pipe(\n      map(this.extractResponseData),\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n   * call API end-point to get a user's informations\n   * @param username {any}\n   * @returns a user's information \n   */\n\n  getUser(username: any): Observable {\n    const token = localStorage.getItem('token');\n    return this.http.get(apiUrl + 'users/' + username, {\n      headers: new HttpHeaders(\n        {\n          Authorization: 'Bearer ' + token,\n        })\n    }).pipe(\n      map(this.extractResponseData),\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n    * call API end-point to get a user's favorite movies list\n    * @param username {any}\n    * @returns a list of the user's favorite movies in json format\n    */\n  getFavoriteMovie(): Observable {\n    const token = localStorage.getItem('token');\n    return this.http.get(apiUrl + 'users/:Username/movies', {\n      headers: new HttpHeaders(\n        {\n          Authorization: 'Bearer ' + token,\n        })\n    }).pipe(\n      map(this.extractResponseData),\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n   * call API end-point to add a movie to the user's favorite list\n   * @param MovieId {any}\n   * @returns the user's favorite list in json format\n   */\n  addFavoriteMovies(movieId: any): Observable {\n    const username = localStorage.getItem('user')\n    const token = localStorage.getItem('token');\n    return this.http.post(apiUrl + 'users/' + username + '/movies/' + movieId, null, {\n      headers: new HttpHeaders(\n        {\n          Authorization: 'Bearer ' + token,\n        })\n    }).pipe(\n      map(this.extractResponseData),\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n * call API end-point to delete a user's favorite movie\n * @param movieId {any}\n * @returns updated user's information after removed a movie from the list in json format\n */\n  deleteMovie(movieId: any): Observable {\n    const username = localStorage.getItem('user');\n    const token = localStorage.getItem('token');\n    return this.http.delete(apiUrl + 'users/' + username + '/movies/' + movieId, {\n      headers: new HttpHeaders(\n        {\n          Authorization: 'Bearer ' + token,\n        })\n    }).pipe(\n      map(this.extractResponseData),\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n   * call API end-point to edit the user's informations\n   * @param username {any}\n   * @param userData {any}\n   * @returns updated user's information\n   */\n  editUser(userData: any): Observable {\n    const username = localStorage.getItem('user')\n    const token = localStorage.getItem('token');\n    return this.http.put(apiUrl + 'users/' + username, userData, {\n      headers: new HttpHeaders(\n        {\n          Authorization: 'Bearer ' + token,\n        })\n    }).pipe(\n      map(this.extractResponseData),\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n   * call API end-point to delete the current user\n   * @param username {any}\n   * @returns delete status\n   */\n  deleteUser(): Observable {\n    const username = localStorage.getItem('user')\n    const token = localStorage.getItem('token');\n    return this.http.delete(apiUrl + 'users/' + username, {\n      headers: new HttpHeaders(\n        {\n          Authorization: 'Bearer ' + token,\n        })\n    }).pipe(\n      map(this.extractResponseData),\n      catchError(this.handleError)\n    );\n  }\n\n\n  /**\n   * Non-typed response extracttion\n   * @param res {any}\n   * @returns response || empty object\n   */\n  private extractResponseData(res: any): any {\n    const body = res;\n    return body || {};\n  }\n\n\n  /**\n   * Handles error responses to Http requests.\n   * @param error The HttpErrorReponse returned on the Observable's response stream.\n   * @returns An observable that errors with the specified message.\n   */\n  private handleError(error: HttpErrorResponse): any {\n    if (error.error instanceof ErrorEvent) {\n      console.error('Some error occurred:', error.error.message);\n    } else {\n      console.error(\n        `Error Status code ${error.status}, ` +\n        `Error body is: ${error.error}`);\n    }\n    return throwError(() => new Error(\n      'Something bad happened; please try again later.'));\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GenreDialogComponent.html":{"url":"components/GenreDialogComponent.html","title":"component - GenreDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GenreDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/genre-dialog/genre-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-genre-dialog\n            \n\n            \n                styleUrls\n                ./genre-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./genre-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/genre-dialog/genre-dialog.component.ts:16\n                            \n                        \n\n                \n                    \n                            The data that was passed to the Genredialog in the MovieCardComponent is injected in to the\nconstructor using the MAT_DIALOG_DATA injection token. The data becomes a property on the class\nand is hence available to be output in the template.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/genre-dialog/genre-dialog.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/genre-dialog/genre-dialog.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-genre-dialog',\n  templateUrl: './genre-dialog.component.html',\n  styleUrls: ['./genre-dialog.component.scss']\n})\nexport class GenreDialogComponent implements OnInit {\n  /**\n   * The data that was passed to the Genredialog in the MovieCardComponent is injected in to the \n   * constructor using the MAT_DIALOG_DATA injection token. The data becomes a property on the class\n   * and is hence available to be output in the template.\n   */\n  constructor(\n    @Inject(MAT_DIALOG_DATA)\n    public data: {\n      Name: string,\n      Description: string,\n    }) { }\n\n\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            {{data.Name}}\n        \n        Description: {{ data.Description }}\n        \n            \n                Close\n        \n    \n\n    \n\n    \n                \n                    ./genre-dialog.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{data.Name}}                Description: {{ data.Description }}                                    Close            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'GenreDialogComponent', 'selector': 'app-genre-dialog'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProfileViewComponent', 'selector': 'app-profile-view'},{'name': 'SynopsisCardComponent', 'selector': 'app-synopsis-card'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GenreDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MovieCardComponent.html":{"url":"components/MovieCardComponent.html","title":"component - MovieCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MovieCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/movie-card/movie-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-movie-card\n            \n\n            \n                styleUrls\n                ./movie-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./movie-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                FavoriteMovies\n                            \n                            \n                                    Public\n                                fetchApiData\n                            \n                            \n                                genres\n                            \n                            \n                                movies\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFavoriteMovie\n                            \n                            \n                                getFavoriteMovie\n                            \n                            \n                                getMovies\n                            \n                            \n                                isFavorite\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDirector\n                            \n                            \n                                openGenre\n                            \n                            \n                                openSynopsis\n                            \n                            \n                                removeFavoriteMovie\n                            \n                            \n                                toggleFavorite\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fetchApiData: FetchApiDataService, dialog: MatDialog, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/movie-card/movie-card.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fetchApiData\n                                                  \n                                                        \n                                                                        FetchApiDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addFavoriteMovie\n                        \n                    \n                \n            \n            \n                \naddFavoriteMovie(MovieID: string, title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:141\n                \n            \n\n\n            \n                \n                    Invokes the addFavoriteMovies method on the fetchApiData service, to add the movie to the user's\nfavourites. If successful, a popup is displayed confirming that the movie has been added. If\nunsuccessful, a popup message asks the user to try again.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    MovieID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Title of the movie selected.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFavoriteMovie\n                        \n                    \n                \n            \n            \n                \ngetFavoriteMovie()\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:125\n                \n            \n\n\n            \n                \n                    Invokes the getUser method on the fetchApiData service and populates the favourites array with\nthe favouriteMovies property on the response, which is an array of the user's favourite movies.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMovies\n                        \n                    \n                \n            \n            \n                \ngetMovies()\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:55\n                \n            \n\n\n            \n                \n                    Invokes the getAllMovies method on the fetchApiData service and populates the movies array with\nthe response.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFavorite\n                        \n                    \n                \n            \n            \n                \nisFavorite(MovieID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:176\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    MovieID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDirector\n                        \n                    \n                \n            \n            \n                \nopenDirector(name: string, bio: string, birth: string, death: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:89\n                \n            \n\n\n            \n                \n                    Opens a dialog to display the director component, passing it the data it needs to display\ninformation about the director inside the data object.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the director of the movie selected.\n\n                                    \n                                \n                                \n                                    bio\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Biography of the director.\n\n                                    \n                                \n                                \n                                    birth\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Year of birth of the director.\n\n                                    \n                                \n                                \n                                    death\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Year of death of the director.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openGenre\n                        \n                    \n                \n            \n            \n                \nopenGenre(name: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:70\n                \n            \n\n\n            \n                \n                    Opens a dialog to display the genre component, passing it the data it needs to display\ngenre information inside the data object.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the genre for the movie selected.\n\n                                    \n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Description of the genre.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openSynopsis\n                        \n                    \n                \n            \n            \n                \nopenSynopsis(title: string, imagePath: any, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:108\n                \n            \n\n\n            \n                \n                    Opens a dialog to display the synopsis component, passing it the data it needs to display a\nsynopsis of the movie within the data object.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Title of the movie selected.\n\n                                    \n                                \n                                \n                                    imagePath\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Synopsis of the movie.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFavoriteMovie\n                        \n                    \n                \n            \n            \n                \nremoveFavoriteMovie(MovieId: string, title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:158\n                \n            \n\n\n            \n                \n                    Invokes the deleteMovie method on the fetchApiData service, to delete the movie from\nthe user's favourites. If successful, a popup is displayed confirming that the movie has been\nremoved. If unsuccessful, a popup message asks the user to try again.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    MovieId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleFavorite\n                        \n                    \n                \n            \n            \n                \ntoggleFavorite(movie: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:183\n                \n            \n\n\n            \n                \n                    toggle add/remove user's favorite function.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    movie\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FavoriteMovies\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchApiData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FetchApiDataService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        genres\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        movies\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:35\n                        \n                    \n\n            \n                \n                    variables to store the movies\n Favorite Movies\nand the genres\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FetchApiDataService } from '../fetch-api-data.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GenreDialogComponent } from '../genre-dialog/genre-dialog.component';\nimport { DirectorCardComponent } from '../director-card/director-card.component';\nimport { SynopsisCardComponent } from '../synopsis-card/synopsis-card.component';\n\n\n@Component({\n  selector: 'app-movie-card',\n  templateUrl: './movie-card.component.html',\n  styleUrls: ['./movie-card.component.scss']\n})\nexport class MovieCardComponent implements OnInit {\n\n\n  /**\n   * variables to store the movies\n   *  Favorite Movies\n   * and the genres\n  */\n\n  movies: any[] = [];\n  genres: any[] = [];\n  FavoriteMovies: any[] = [];\n\n  constructor(\n    public fetchApiData: FetchApiDataService,\n    public dialog: MatDialog,\n    public snackBar: MatSnackBar) { }\n\n\n  ngOnInit(): void {\n    this.getMovies();\n  }\n\n\n  /** \n   * Invokes the getAllMovies method on the fetchApiData service and populates the movies array with\n   * the response. \n   */\n\n  getMovies(): void {\n    this.fetchApiData.getAllMovies().subscribe((resp: any) => {\n      this.movies = resp;\n      console.log(this.movies);\n      return this.movies;\n    });\n  }\n\n  /**\n   * Opens a dialog to display the genre component, passing it the data it needs to display\n   * genre information inside the data object.\n   * @param name Name of the genre for the movie selected.\n   * @param description Description of the genre.\n   */\n\n  openGenre(name: string, description: string): void {\n    this.dialog.open(GenreDialogComponent, {\n      data: {\n        Name: name,\n        Description: description\n      },\n      width: '500px',\n    });\n  }\n\n  /**\n  * Opens a dialog to display the director component, passing it the data it needs to display\n  * information about the director inside the data object.\n  * @param name Name of the director of the movie selected.\n  * @param bio Biography of the director.\n  * @param birth Year of birth of the director.\n  * @param death Year of death of the director.\n  */\n\n  openDirector(name: string, bio: string, birth: string, death: string): void {\n    this.dialog.open(DirectorCardComponent, {\n      data: {\n        Name: name,\n        Bio: bio,\n        Birth: birth,\n        Death: death\n      },\n      width: '500px',\n    });\n  }\n\n  /**\n   * Opens a dialog to display the synopsis component, passing it the data it needs to display a\n   * synopsis of the movie within the data object.\n   * @param title Title of the movie selected.\n   * @param description Synopsis of the movie.\n   */\n\n  openSynopsis(title: string, imagePath: any, description: string): void {\n    this.dialog.open(SynopsisCardComponent, {\n      data: {\n        Title: title,\n        ImagePath: imagePath,\n        Description: description,\n      },\n      width: '500px'\n    });\n  }\n\n\n  /** \n   * Invokes the getUser method on the fetchApiData service and populates the favourites array with\n   * the favouriteMovies property on the response, which is an array of the user's favourite movies. \n   */\n\n  getFavoriteMovie(): void {\n    const user = localStorage.getItem('user');\n    this.fetchApiData.getUser(user).subscribe((resp: any) => {\n      this.FavoriteMovies = resp.FavoriteMovies;\n      console.log(this.FavoriteMovies);\n    });\n  }\n\n  /**\n     * Invokes the addFavoriteMovies method on the fetchApiData service, to add the movie to the user's\n     * favourites. If successful, a popup is displayed confirming that the movie has been added. If \n     * unsuccessful, a popup message asks the user to try again.\n     * @param movieID ID of the movie selected.\n     * @param title Title of the movie selected.\n     */\n\n  addFavoriteMovie(MovieID: string, title: string): void {\n    this.fetchApiData.addFavoriteMovies(MovieID).subscribe((resp: any) => {\n      this.snackBar.open(`${title} has been added to your favorites!`, 'OK', {\n        duration: 4000,\n      });\n      this.ngOnInit();\n    });\n    return this.getFavoriteMovie();\n  }\n  /**\n    * Invokes the deleteMovie method on the fetchApiData service, to delete the movie from \n    * the user's favourites. If successful, a popup is displayed confirming that the movie has been\n    * removed. If unsuccessful, a popup message asks the user to try again.\n    * @param movieID \n    * @param title \n    */\n\n  removeFavoriteMovie(MovieId: string, title: string): void {\n    this.fetchApiData.deleteMovie(MovieId).subscribe((resp: any) => {\n      console.log(resp);\n      this.snackBar.open(\n        `${title} has been removed from your favorites!`,\n        'OK',\n        {\n          duration: 4000,\n        }\n      );\n      this.ngOnInit();\n    });\n    return this.getFavoriteMovie();\n  }\n\n  /*\n     check if the movie is the user's favorite?\n   */\n  isFavorite(MovieID: string): boolean {\n    return this.FavoriteMovies.some((movie) => movie._id === MovieID);\n  }\n\n  /**\n   * toggle add/remove user's favorite function.\n */\n  toggleFavorite(movie: any): void {\n    this.isFavorite(movie._id)\n      ? this.removeFavoriteMovie(movie._id, movie.Title)\n      : this.addFavoriteMovie(movie._id, movie.Title);\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n            {{movie.Title}}\n            Directed by: {{movie.Director.Name}}\n        \n        \n\n        \n\n            Genre\n            \n\n            \n                Director\n            \n\n            \n                Synopsis\n            \n\n            \n                 favorite_border \n                 favorite \n            \n\n        \n    \n\n    \n\n    \n                \n                    ./movie-card.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{movie.Title}}            Directed by: {{movie.Director.Name}}                                    Genre                                        Director                                        Synopsis                                         favorite_border                  favorite                         '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'GenreDialogComponent', 'selector': 'app-genre-dialog'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProfileViewComponent', 'selector': 'app-profile-view'},{'name': 'SynopsisCardComponent', 'selector': 'app-synopsis-card'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MovieCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToMoviesPage\n                            \n                            \n                                goToProfilePage\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToMoviesPage\n                        \n                    \n                \n            \n            \n                \ngoToMoviesPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:31\n                \n            \n\n\n            \n                \n                    Routes user to movies page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToProfilePage\n                        \n                    \n                \n            \n            \n                \ngoToProfilePage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:38\n                \n            \n\n\n            \n                \n                    Routes user to profile page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:46\n                \n            \n\n\n            \n                \n                    Logs a user out, clears the localStorage\nRe-routes to the welcome page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { FetchApiDataService } from '../fetch-api-data.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  /**\n  * All constructor items are documented as properties\n  * @ignore\n */\n\n  constructor(\n    public fetchApiData: FetchApiDataService,\n    public snackBar: MatSnackBar,\n    public dialog: MatDialog,\n    public router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n  /**\n     * Routes user to movies page\n     */\n  goToMoviesPage(): void {\n    this.router.navigate(['movies']);\n  }\n\n  /**\n   * Routes user to profile page\n   */\n  goToProfilePage(): void {\n    this.router.navigate(['profile']);\n  }\n\n  /**\n   * Logs a user out, clears the localStorage\n   * Re-routes to the welcome page\n   */\n  logout(): void {\n    localStorage.clear();\n    this.router.navigate(['welcome']).then(() => {\n      window.location.reload();\n    });\n  }\n}\n\n    \n\n    \n        \n    \n    \n        \n            MOVIES\n        \n    \n    \n        \n            PROFILE\n        \n    \n    \n        \n            LOGOUT\n        \n    \n\n\n    \n\n    \n                \n                    ./navbar.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            MOVIES                                    PROFILE                                    LOGOUT            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'GenreDialogComponent', 'selector': 'app-genre-dialog'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProfileViewComponent', 'selector': 'app-profile-view'},{'name': 'SynopsisCardComponent', 'selector': 'app-synopsis-card'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileViewComponent.html":{"url":"components/ProfileViewComponent.html","title":"component - ProfileViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile-view/profile-view.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile-view\n            \n\n            \n                styleUrls\n                ./profile-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                favorited\n                            \n                            \n                                favoritedTitle\n                            \n                            \n                                    Public\n                                fetchApiData\n                            \n                            \n                                movies\n                            \n                            \n                                password\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteProfile\n                            \n                            \n                                filterFavorites\n                            \n                            \n                                getFavorites\n                            \n                            \n                                getMovies\n                            \n                            \n                                getUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openEditProfile\n                            \n                            \n                                openSynopsis\n                            \n                            \n                                removeFavorite\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fetchApiData: FetchApiDataService, snackBar: MatSnackBar, dialog: MatDialog, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile-view/profile-view.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fetchApiData\n                                                  \n                                                        \n                                                                        FetchApiDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userData\n                    \n                \n                \n                    \n                        Type :     { Username: string; Password: string; Email: string; Birthday: string; }\n\n                    \n                \n                \n                    \n                        Default value : { Username: '', Password: '', Email: '', Birthday: '' }\n                    \n                \n                        \n                            \n                                    Defined in src/app/profile-view/profile-view.component.ts:31\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProfile\n                        \n                    \n                \n            \n            \n                \ndeleteProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile-view/profile-view.component.ts:143\n                \n            \n\n\n            \n                \n                    Invokes the deleteUser method on the fetchApiData service to deregister the user. If deregistration\nis successful the local storage is cleared, a popup confirms that the profile has been removed and\nthe user is routed back to the welcome page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterFavorites\n                        \n                    \n                \n            \n            \n                \nfilterFavorites()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile-view/profile-view.component.ts:102\n                \n            \n\n\n            \n                \n                    Filters the logged in user's favorited movies against all movies\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        the favoritedTitle state which includes the titles of all favorited movies\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFavorites\n                        \n                    \n                \n            \n            \n                \ngetFavorites()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile-view/profile-view.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        filterFavorites() function which filters the favorited movies\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMovies\n                        \n                    \n                \n            \n            \n                \ngetMovies()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile-view/profile-view.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile-view/profile-view.component.ts:56\n                \n            \n\n\n            \n                \n                    Invokes the getUser method on the fetchApiData service and populates the user object with\nthe response.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile-view/profile-view.component.ts:45\n                \n            \n\n\n            \n                \n                    Calls the getUser method as soon as the component loads so that the data can be used to populate\nthe template.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditProfile\n                        \n                    \n                \n            \n            \n                \nopenEditProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile-view/profile-view.component.ts:69\n                \n            \n\n\n            \n                \n                    Opens a dialog containing the editProfile component that renders the edit profile form.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openSynopsis\n                        \n                    \n                \n            \n            \n                \nopenSynopsis(title: string, imagePath: any, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile-view/profile-view.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    imagePath\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFavorite\n                        \n                    \n                \n            \n            \n                \nremoveFavorite(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile-view/profile-view.component.ts:119\n                \n            \n\n\n            \n                \n                    use API end-point to remove user favorite\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        updated user's data in json format\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile-view/profile-view.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        favorited\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/profile-view/profile-view.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        favoritedTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/profile-view/profile-view.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchApiData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FetchApiDataService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile-view/profile-view.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        movies\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/profile-view/profile-view.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : localStorage.getItem('password')\n                    \n                \n                    \n                        \n                                Defined in src/app/profile-view/profile-view.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile-view/profile-view.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile-view/profile-view.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : localStorage.getItem('user')\n                    \n                \n                    \n                        \n                                Defined in src/app/profile-view/profile-view.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n// Used to navigate the user back to the welcome page on successful deregistration\nimport { Router } from '@angular/router';\nimport { EditProfileComponent } from '../edit-profile/edit-profile.component';\nimport { FetchApiDataService } from '../fetch-api-data.service';\nimport { SynopsisCardComponent } from '../synopsis-card/synopsis-card.component';\n\n\n@Component({\n  selector: 'app-profile-view',\n  templateUrl: './profile-view.component.html',\n  styleUrls: ['./profile-view.component.scss']\n})\nexport class ProfileViewComponent implements OnInit {\n\n  user: any = localStorage.getItem('user');\n  password: any = localStorage.getItem('password');\n  favorited: any[] = []\n  favoritedTitle: any = []\n  movies: any[] = []\n\n  @Input() userData = { Username: '', Password: '', Email: '', Birthday: '' }\n\n  constructor(\n    public fetchApiData: FetchApiDataService,\n    public snackBar: MatSnackBar,\n    public dialog: MatDialog,\n    public router: Router\n  ) { }\n\n  /**\n   * Calls the getUser method as soon as the component loads so that the data can be used to populate\n   * the template.\n   */\n\n  ngOnInit(): void {\n    this.getUser()\n    this.getFavorites()\n    this.getMovies()\n  }\n\n  /** \n  * Invokes the getUser method on the fetchApiData service and populates the user object with\n  * the response. \n  */\n\n  getUser(): void {\n    const user = localStorage.getItem('user')\n    this.fetchApiData.getUser(user).subscribe((resp: any) => {\n      this.user = resp\n      return this.user\n    })\n    console.log(this.user);\n  }\n\n  /**\n   * Opens a dialog containing the editProfile component that renders the edit profile form.\n   */\n\n  openEditProfile(): void {\n    this.dialog.open(EditProfileComponent, {\n      width: '500px'\n    });\n  }\n\n  getMovies(): void {\n    this.fetchApiData.getAllMovies().subscribe((resp: any) => {\n      this.movies = resp;\n      console.log(this.movies);//all movies\n      return this.movies;\n    });\n  }\n\n  /**\n   * @function getAllMovies Retrieves the logged in user's favorited movies\n   * @returns filterFavorites() function which filters the favorited movies\n   */\n\n  getFavorites(): void {\n    const user = localStorage.getItem('user');\n    this.fetchApiData.getUser(user).subscribe((resp: any) => {\n      this.favorited = resp.FavoriteMovies;\n      console.log(this.favorited);//favorite movies(may be same movie multiple times)\n      return this.filterFavorites();\n    });\n  }\n\n  /**\n * Filters the logged in user's favorited movies against all movies\n * @returns the favoritedTitle state which includes the titles of all favorited movies\n */\n\n  filterFavorites(): void {\n    this.movies.forEach((movie: any) => {\n      if (this.favorited.includes(movie._id)) {\n        this.favoritedTitle.push(movie);\n      }\n    });\n    console.log(this.favoritedTitle);//(favorite movies)\n    return this.favoritedTitle;\n  }\n\n  /**\n * use API end-point to remove user favorite\n * @function deleteMovie\n * @param MovieId{string}\n * @returns updated user's data in json format\n */\n\n  removeFavorite(id: string): void {\n    this.fetchApiData.deleteMovie(id).subscribe((resp: any) => {\n      this.snackBar.open(`movie deleted`, 'OK', {\n        duration: 2000\n      });\n      location.reload();\n    })\n  }\n  openSynopsis(title: string, imagePath: any, description: string): void {\n    this.dialog.open(SynopsisCardComponent, {\n      data: {\n        Title: title,\n        ImagePath: imagePath,\n        Description: description,\n      },\n      width: '500px'\n    });\n  }\n  /** \n   * Invokes the deleteUser method on the fetchApiData service to deregister the user. If deregistration\n   * is successful the local storage is cleared, a popup confirms that the profile has been removed and\n   * the user is routed back to the welcome page. \n   */\n\n  deleteProfile(): void {\n    const user = localStorage.getItem('user');\n    this.fetchApiData.deleteUser().subscribe((res: any) => {\n      this.snackBar.open(`User profile has been deleted`, 'OK', {\n        duration: 2000\n      });\n    });\n    localStorage.clear();\n    this.router.navigate(['welcome']);\n  }\n}\n\n\n\n\n    \n\n    \n        \n\nHello {{user.Username}}! \n\n    \n        \n            Your Profile Information\n        \n        \n            Username: {{ this.user.Username }}\n            Password: {{password}}\n            Email: {{ user.Email }}\n            Birthday: {{ user.Birthday | date : 'mediumDate' }}\n            \n            \n                Edit Profile\n            \n            \n                Delete Profile\n            \n        \n    \n\n\n    Favorited Movies\n    \n\n        \n            {{movie.Title}}\n            Directed by: {{movie.Director.Name}}\n        \n\n\n        \n        \n            favorite_filled\n            \n                Synopsis\n            \n        \n    \n\n    \n\n    \n                \n                    ./profile-view.component.scss\n                \n                mat-card {\n    flex: auto;\n    margin: 7px;\n    text-align: center;\n    font-family: 'Work Sans', sans-serif;\n    width: 250px;\n  }\n  \n  mat-card-header {\n    max-height: 60px;\n  }\n  \n  mat-card-title {\n    font-family: 'Acme', sans-serif;\n    color: steelblue\n  }\n \n  \n  @media screen and (max-width: 840px) {\n    mat-card {\n        max-width: 350px;\n    }\n  \n   \n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Hello {{user.Username}}!                         Your Profile Information                            Username: {{ this.user.Username }}            Password: {{password}}            Email: {{ user.Email }}            Birthday: {{ user.Birthday | date : \\'mediumDate\\' }}                                        Edit Profile                                        Delete Profile                            Favorited Movies                        {{movie.Title}}            Directed by: {{movie.Director.Name}}                                    favorite_filled                            Synopsis                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'GenreDialogComponent', 'selector': 'app-genre-dialog'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProfileViewComponent', 'selector': 'app-profile-view'},{'name': 'SynopsisCardComponent', 'selector': 'app-synopsis-card'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SynopsisCardComponent.html":{"url":"components/SynopsisCardComponent.html","title":"component - SynopsisCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SynopsisCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/synopsis-card/synopsis-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-synopsis-card\n            \n\n            \n                styleUrls\n                ./synopsis-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./synopsis-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/synopsis-card/synopsis-card.component.ts:14\n                            \n                        \n\n                \n                    \n                            The data that was passed to the Synopsis dialog in the MovieCardComponent is injected in to the\nconstructor using the MAT_DIALOG_DATA injection token. The data becomes a property on the class\nand is hence available to be output in the template.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/synopsis-card/synopsis-card.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/synopsis-card/synopsis-card.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-synopsis-card',\n  templateUrl: './synopsis-card.component.html',\n  styleUrls: ['./synopsis-card.component.scss']\n})\nexport class SynopsisCardComponent implements OnInit {\n\n  /**\n     * The data that was passed to the Synopsis dialog in the MovieCardComponent is injected in to the \n     * constructor using the MAT_DIALOG_DATA injection token. The data becomes a property on the class\n     * and is hence available to be output in the template.\n     */\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA)\n\n    public data: {\n      Title: string,\n      ImagePath: any,\n      Description: string,\n      Genre: string\n    }\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n    \n    {{ data.Title }}\n    {{ data.Description }}\n    \n        \n            Close\n        \n    \n\n    \n\n    \n                \n                    ./synopsis-card.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ data.Title }}    {{ data.Description }}                        Close            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'GenreDialogComponent', 'selector': 'app-genre-dialog'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProfileViewComponent', 'selector': 'app-profile-view'},{'name': 'SynopsisCardComponent', 'selector': 'app-synopsis-card'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SynopsisCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserLoginFormComponent.html":{"url":"components/UserLoginFormComponent.html","title":"component - UserLoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserLoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-login-form/user-login-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-login-form\n            \n\n            \n                styleUrls\n                ./user-login-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-login-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                fetchApiData\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loginUser\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fetchApiData: FetchApiDataService, dialogRef: MatDialogRef, snackBar: MatSnackBar, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-login-form/user-login-form.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fetchApiData\n                                                  \n                                                        \n                                                                        FetchApiDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userData\n                    \n                \n                \n                    \n                        Type :     { Username: string; Password: string; }\n\n                    \n                \n                \n                    \n                        Default value : { Username: '', Password: '' }\n                    \n                \n                        \n                            \n                                    Defined in src/app/user-login-form/user-login-form.component.ts:31\n                            \n                        \n                \n                    \n                        userData values are populated by form inputs in the user-login-form template that are bound\nusing the ngModel directive.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loginUser\n                        \n                    \n                \n            \n            \n                \nloginUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-login-form/user-login-form.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-login-form/user-login-form.component.ts:48\n                \n            \n\n\n            \n                \n                    Invokes the loginUser method on the fetchApiData service, with the loginData from the form,\nin order to log in the user. A successful login closes the form and navigates the user to the\nmovies route. A popup is displayed confirming login success. If unsuccessful, a popup message\nasks the user to check their username and password.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-login-form/user-login-form.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchApiData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FetchApiDataService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-login-form/user-login-form.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-login-form/user-login-form.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n// You'll use this import to close the dialog on success\nimport { MatDialogRef } from '@angular/material/dialog';\n\n// This import brings in the API calls created in 6.2\nimport { FetchApiDataService } from '../fetch-api-data.service';\n\n// This import is used to display notifications back to the user\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-login-form',\n  templateUrl: './user-login-form.component.html',\n  styleUrls: ['./user-login-form.component.scss']\n})\nexport class UserLoginFormComponent implements OnInit {\n\n  /** \n  * userData values are populated by form inputs in the user-login-form template that are bound \n  * using the ngModel directive.\n  */\n\n  @Input() userData = { Username: '', Password: '' };\n\n  constructor(\n    public fetchApiData: FetchApiDataService,\n    public dialogRef: MatDialogRef,\n    public snackBar: MatSnackBar,\n    private router: Router\n  ) { }\n\n\n  /**\n   * Invokes the loginUser method on the fetchApiData service, with the loginData from the form,\n   * in order to log in the user. A successful login closes the form and navigates the user to the\n   * movies route. A popup is displayed confirming login success. If unsuccessful, a popup message\n   * asks the user to check their username and password.\n   */\n\n  ngOnInit(): void {\n  }\n  // This is the function responsible for sending the form inputs to the backend\n  loginUser(): void {\n    this.fetchApiData.userLogin(this.userData).subscribe((result) => {\n      // Logic for a successful user login\n      this.dialogRef.close(); // This will close the modal on success!\n\n      /**\n      * The user's username and token returned from the database are stored in local storage so that \n      * they can be used for subsequent requests to fetch movies, get a user's profile etc. Password\n      * is set using the userData so that an unhashed version can be used when displaying the user's\n      * profile in the profile view (the database returns the hashed version).\n      */\n\n      localStorage.setItem('password', this.userData.Password);\n      localStorage.setItem('user', result.user.Username);\n      localStorage.setItem('token', result.token);\n      console.log(result);\n      this.snackBar.open(result.user.Username, 'Login successful', {\n        duration: 4000\n      });\n      this.router.navigate(['movies']);\n    }, (result) => {\n      this.snackBar.open('No such user.Try again', 'OK', {\n        duration: 4000\n      });\n    });\n  }\n}\n\n    \n\n    \n        \n    \n        Log In!\n    \n\n    \n\n        \n            \n                \n            \n\n            \n                \n            \n\n        \n\n    \n\n    \n        \n            Log In\n        \n    \n\n\n    \n\n    \n                \n                    ./user-login-form.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Log In!                                                                                                                                    Log In            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'GenreDialogComponent', 'selector': 'app-genre-dialog'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProfileViewComponent', 'selector': 'app-profile-view'},{'name': 'SynopsisCardComponent', 'selector': 'app-synopsis-card'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserLoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserRegistrationFormComponent.html":{"url":"components/UserRegistrationFormComponent.html","title":"component - UserRegistrationFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserRegistrationFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-registration-form/user-registration-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-registration-form\n            \n\n            \n                styleUrls\n                ./user-registration-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-registration-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                fetchApiData\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fetchApiData: FetchApiDataService, dialogRef: MatDialogRef, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-registration-form/user-registration-form.component.ts:32\n                            \n                        \n\n                \n                    \n                            Passing classes as parameters to the constructor sets them as properties on the component class\nthat can then be accessed as needed.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fetchApiData\n                                                  \n                                                        \n                                                                        FetchApiDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userData\n                    \n                \n                \n                    \n                        Type :     { Username: string; Password: string; Email: string; Birthday: string; }\n\n                    \n                \n                \n                    \n                        Default value : { Username: '', Password: '', Email: '', Birthday: '' }\n                    \n                \n                        \n                            \n                                    Defined in src/app/user-registration-form/user-registration-form.component.ts:32\n                            \n                        \n                \n                    \n                        userData values are populated by form inputs in the user-registration-form template that are\nbound using the ngModel directive.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-registration-form/user-registration-form.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n            \n                \nregisterUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-registration-form/user-registration-form.component.ts:57\n                \n            \n\n\n            \n                \n                    Invokes the userRegistration method on the fetchApiData service, with the userData from the form,\nin order to register the user. Successful registration closes the form and a popup is displayed\ninviting the user to log in. If unsuccessful, a popup message will ask the user to try again with a\ndifferent username.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-registration-form/user-registration-form.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchApiData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FetchApiDataService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-registration-form/user-registration-form.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-registration-form/user-registration-form.component.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n// You'll use this import to close the dialog on success\nimport { MatDialogRef } from '@angular/material/dialog';\n\n// This import brings in the API calls created in 6.2\nimport { FetchApiDataService } from '../fetch-api-data.service';\n\n// This import is used to display notifications back to the user\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n\n@Component({\n  selector: 'app-user-registration-form',\n  templateUrl: './user-registration-form.component.html',\n  styleUrls: ['./user-registration-form.component.scss']\n})\n\n\nexport class UserRegistrationFormComponent implements OnInit {\n\n  /** \n   * userData values are populated by form inputs in the user-registration-form template that are \n   * bound using the ngModel directive.\n   */\n\n  @Input() userData = { Username: '', Password: '', Email: '', Birthday: '' };\n  /** \n     * Passing classes as parameters to the constructor sets them as properties on the component class \n     * that can then be accessed as needed.\n     */\n\n  constructor(\n    public fetchApiData: FetchApiDataService,\n    // Creates a reference to the dialog that contains the UserRegistrationForm component\n    public dialogRef: MatDialogRef,\n    public snackBar: MatSnackBar\n\n  ) { }\n\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * Invokes the userRegistration method on the fetchApiData service, with the userData from the form,\n   * in order to register the user. Successful registration closes the form and a popup is displayed \n   * inviting the user to log in. If unsuccessful, a popup message will ask the user to try again with a \n   * different username.\n   */\n\n  registerUser(): void {\n    this.fetchApiData.userRegistration(this.userData).subscribe((result) => {\n      // Logic for a successful user registration \n      this.dialogRef.close(); // This will close the modal on success!\n      console.log(result);\n      this.snackBar.open(this.userData.Username, 'User Registration successful.Please logIn', {\n        duration: 4000\n      });\n    }, (result) => {\n      this.snackBar.open('Try again', 'OK', {\n        duration: 4000\n      });\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        Sign Up!\n    \n\n    \n\n        \n            \n                \n            \n\n            \n                \n            \n\n            \n                \n            \n\n            \n                \n            \n\n        \n\n    \n\n    \n        \n            Sign Up\n        \n    \n\n\n    \n\n    \n                \n                    ./user-registration-form.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Sign Up!                                                                                                                                                                                                                    Sign Up            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'GenreDialogComponent', 'selector': 'app-genre-dialog'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProfileViewComponent', 'selector': 'app-profile-view'},{'name': 'SynopsisCardComponent', 'selector': 'app-synopsis-card'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserRegistrationFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WelcomePageComponent.html":{"url":"components/WelcomePageComponent.html","title":"component - WelcomePageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WelcomePageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/welcome-page/welcome-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-welcome-page\n            \n\n            \n                styleUrls\n                ./welcome-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./welcome-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openUserLoginDialog\n                            \n                            \n                                openUserRegistrationDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/welcome-page/welcome-page.component.ts:17\n                            \n                        \n\n                \n                    \n                            Sets MatDialog as a property on the component class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Class used to create dialogs in which other components can be rendered.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/welcome-page/welcome-page.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUserLoginDialog\n                        \n                    \n                \n            \n            \n                \nopenUserLoginDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/welcome-page/welcome-page.component.ts:39\n                \n            \n\n\n            \n                \n                    Opens a dialog containing the user-login-form component that renders the login form.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUserRegistrationDialog\n                        \n                    \n                \n            \n            \n                \nopenUserRegistrationDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/welcome-page/welcome-page.component.ts:30\n                \n            \n\n\n            \n                \n                    Opens a dialog containing the user-registration-form component that renders the registration form.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/welcome-page/welcome-page.component.ts:24\n                        \n                    \n\n            \n                \n                    Class used to create dialogs in which other components can be rendered.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserRegistrationFormComponent } from '../user-registration-form/user-registration-form.component';\nimport { UserLoginFormComponent } from '../user-login-form/user-login-form.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-welcome-page',\n  templateUrl: './welcome-page.component.html',\n  styleUrls: ['./welcome-page.component.scss']\n})\nexport class WelcomePageComponent implements OnInit {\n\n  /**\n    * Sets MatDialog as a property on the component class.\n    * @param dialog Class used to create dialogs in which other components can be rendered.\n    */\n\n  constructor(public dialog: MatDialog) { }\n  ngOnInit(): void {\n  }\n  /** \n   * Opens a dialog containing the user-registration-form component that renders the registration form.\n   */\n  openUserRegistrationDialog(): void {\n    this.dialog.open(UserRegistrationFormComponent, {\n      // Assigning the dialog a width\n      width: '280px'\n    });\n  }\n  /**\n  * Opens a dialog containing the user-login-form component that renders the login form.\n  */\n  openUserLoginDialog(): void {\n    this.dialog.open(UserLoginFormComponent, {\n      // Assigning the dialog a width\n      width: '280px'\n    });\n  }\n}\n\n    \n\n    \n        \n\n    \n        Welcome to myFlix!\n    \n\n    \n        Sign Up\n    \n\n    \n        Login\n    \n\n\n    \n\n    \n                \n                    ./welcome-page.component.scss\n                \n                .main-page {\n    margin-top: 100px;\n    text-align: center;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Welcome to myFlix!                Sign Up                Login    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'GenreDialogComponent', 'selector': 'app-genre-dialog'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProfileViewComponent', 'selector': 'app-profile-view'},{'name': 'SynopsisCardComponent', 'selector': 'app-synopsis-card'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WelcomePageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/director-card/director-card.component.ts\n            \n            component\n            DirectorCardComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/edit-profile/edit-profile.component.ts\n            \n            component\n            EditProfileComponent\n            \n                20 %\n                (2/10)\n            \n        \n        \n            \n                \n                src/app/fetch-api-data.service.ts\n            \n            injectable\n            FetchApiDataService\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                src/app/fetch-api-data.service.ts\n            \n            variable\n            apiUrl\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/genre-dialog/genre-dialog.component.ts\n            \n            component\n            GenreDialogComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/movie-card/movie-card.component.ts\n            \n            component\n            MovieCardComponent\n            \n                50 %\n                (9/18)\n            \n        \n        \n            \n                \n                src/app/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/profile-view/profile-view.component.ts\n            \n            component\n            ProfileViewComponent\n            \n                28 %\n                (6/21)\n            \n        \n        \n            \n                \n                src/app/synopsis-card/synopsis-card.component.ts\n            \n            component\n            SynopsisCardComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/user-login-form/user-login-form.component.ts\n            \n            component\n            UserLoginFormComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/user-registration-form/user-registration-form.component.ts\n            \n            component\n            UserRegistrationFormComponent\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/welcome-page/welcome-page.component.ts\n            \n            component\n            WelcomePageComponent\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.2.0\n        \n            @angular/cdk : ^13.2.2\n        \n            @angular/common : ~13.2.0\n        \n            @angular/compiler : ~13.2.0\n        \n            @angular/core : ~13.2.0\n        \n            @angular/forms : ~13.2.0\n        \n            @angular/material : ^13.2.2\n        \n            @angular/platform-browser : ~13.2.0\n        \n            @angular/platform-browser-dynamic : ~13.2.0\n        \n            @angular/router : ~13.2.0\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMyFlixAngularClient\nThis project was generated with Angular CLI version 13.2.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDirectorCardComponent\n\nDirectorCardComponent\n\nAppModule -->\n\nDirectorCardComponent->AppModule\n\n\n\n\n\nEditProfileComponent\n\nEditProfileComponent\n\nAppModule -->\n\nEditProfileComponent->AppModule\n\n\n\n\n\nGenreDialogComponent\n\nGenreDialogComponent\n\nAppModule -->\n\nGenreDialogComponent->AppModule\n\n\n\n\n\nMovieCardComponent\n\nMovieCardComponent\n\nAppModule -->\n\nMovieCardComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nProfileViewComponent\n\nProfileViewComponent\n\nAppModule -->\n\nProfileViewComponent->AppModule\n\n\n\n\n\nSynopsisCardComponent\n\nSynopsisCardComponent\n\nAppModule -->\n\nSynopsisCardComponent->AppModule\n\n\n\n\n\nUserLoginFormComponent\n\nUserLoginFormComponent\n\nAppModule -->\n\nUserLoginFormComponent->AppModule\n\n\n\n\n\nUserRegistrationFormComponent\n\nUserRegistrationFormComponent\n\nAppModule -->\n\nUserRegistrationFormComponent->AppModule\n\n\n\n\n\nWelcomePageComponent\n\nWelcomePageComponent\n\nAppModule -->\n\nWelcomePageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            apiUrl   (src/.../fetch-api-data.service.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/fetch-api-data.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://myflix-moviesapp.herokuapp.com/'\n                    \n                \n\n            \n                \n                    Declaring the api url that will provide data for the client app\n\n                \n            \n\n        \n    \n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
